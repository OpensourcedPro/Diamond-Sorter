# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'form.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_DiamondSorter(object):
    def setupUi(self, DiamondSorter):
        DiamondSorter.setObjectName("DiamondSorter")
        DiamondSorter.resize(980, 810)
        DiamondSorter.setMinimumSize(QtCore.QSize(980, 810))
        DiamondSorter.setMaximumSize(QtCore.QSize(980, 810))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(35, 38, 41))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(35, 38, 41))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(35, 38, 41))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.HighlightedText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(35, 38, 41))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(35, 38, 41))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(35, 38, 41))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.HighlightedText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(35, 38, 41))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(35, 38, 41))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(35, 38, 41))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.HighlightedText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        DiamondSorter.setPalette(palette)
        font = QtGui.QFont()
        font.setBold(False)
        DiamondSorter.setFont(font)
        DiamondSorter.setAutoFillBackground(False)
        DiamondSorter.setStyleSheet("QLineEdit,\n"
"QComboBox,\n"
"QDateTimeEdit,\n"
"QSpinBox,\n"
"QDoubleSpinBox {\n"
"  color: #1de9b6;\n"
"  background-color: #31363b;\n"
"  border: 2px solid #1de9b6;\n"
"  border-radius: 4px;\n"
"  height: 32px;\n"
"}\n"
"\n"
"QWidget {\n"
"  background-color: #232629;\n"
"  color: #ffffff;\n"
"}\n"
"\n"
"QGroupBox,\n"
"QFrame {\n"
"  background-color: #232629;\n"
"  border: 2px solid #4f5b62;\n"
"  border-radius: 4px;\n"
"}\n"
"\n"
"QRadioButton::indicator,\n"
"QCheckBox::indicator {\n"
"  width: 16px;\n"
"  height: 16px;\n"
"  border: 2px solid #1de9b6;\n"
"  border-radius: 0;\n"
"  transform: rotate(45deg);\n"
"  transform-origin: center;\n"
"}\n"
"\n"
"QRadioButton::indicator:checked,\n"
"QCheckBox::indicator:checked {\n"
"  background-color: #1de9b6;\n"
"  border-color: #1de9b6;\n"
"}\n"
"\n"
"QRadioButton::indicator:hover,\n"
"QCheckBox::indicator:hover {\n"
"  border-color: rgba(29, 233, 182, 0.8);\n"
"}\n"
"\n"
"QRadioButton::indicator:checked:hover,\n"
"QCheckBox::indicator:checked:hover {\n"
"  border-color: #1de9b6;\n"
"}")
        DiamondSorter.setAnimated(True)
        self.centralwidget = QtWidgets.QWidget(DiamondSorter)
        self.centralwidget.setWhatsThis("")
        self.centralwidget.setObjectName("centralwidget")
        self.tab_widget = QtWidgets.QTabWidget(self.centralwidget)
        self.tab_widget.setEnabled(True)
        self.tab_widget.setGeometry(QtCore.QRect(10, 430, 971, 241))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(False)
        self.tab_widget.setFont(font)
        self.tab_widget.setFocusPolicy(QtCore.Qt.NoFocus)
        self.tab_widget.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.tab_widget.setStyleSheet("")
        self.tab_widget.setTabPosition(QtWidgets.QTabWidget.North)
        self.tab_widget.setTabShape(QtWidgets.QTabWidget.Triangular)
        self.tab_widget.setUsesScrollButtons(True)
        self.tab_widget.setTabsClosable(False)
        self.tab_widget.setMovable(False)
        self.tab_widget.setTabBarAutoHide(False)
        self.tab_widget.setObjectName("tab_widget")
        self.formatOptionsTab = QtWidgets.QWidget()
        self.formatOptionsTab.setObjectName("formatOptionsTab")
        self.deleate_after_sorting_checkbox = QtWidgets.QCheckBox(self.formatOptionsTab)
        self.deleate_after_sorting_checkbox.setEnabled(False)
        self.deleate_after_sorting_checkbox.setGeometry(QtCore.QRect(780, 170, 181, 22))
        self.deleate_after_sorting_checkbox.setObjectName("deleate_after_sorting_checkbox")
        self.file_type_or_format_for_the_search_label = QtWidgets.QTextEdit(self.formatOptionsTab)
        self.file_type_or_format_for_the_search_label.setEnabled(True)
        self.file_type_or_format_for_the_search_label.setGeometry(QtCore.QRect(20, 100, 171, 31))
        self.file_type_or_format_for_the_search_label.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.file_type_or_format_for_the_search_label.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.file_type_or_format_for_the_search_label.setDocumentTitle("")
        self.file_type_or_format_for_the_search_label.setObjectName("file_type_or_format_for_the_search_label")
        self.stealer_log_format_label = QtWidgets.QLabel(self.formatOptionsTab)
        self.stealer_log_format_label.setGeometry(QtCore.QRect(20, 5, 161, 21))
        self.stealer_log_format_label.setObjectName("stealer_log_format_label")
        self.file_type_or_format_label = QtWidgets.QLabel(self.formatOptionsTab)
        self.file_type_or_format_label.setGeometry(QtCore.QRect(10, 70, 191, 20))
        self.file_type_or_format_label.setObjectName("file_type_or_format_label")
        self.stealer_log_format_combo = QtWidgets.QComboBox(self.formatOptionsTab)
        self.stealer_log_format_combo.setEnabled(True)
        self.stealer_log_format_combo.setGeometry(QtCore.QRect(30, 30, 141, 24))
        self.stealer_log_format_combo.setEditable(True)
        self.stealer_log_format_combo.setObjectName("stealer_log_format_combo")
        self.stealer_log_format_combo.addItem("")
        self.stealer_log_format_combo.setItemText(0, "")
        self.stealer_log_format_combo.addItem("")
        self.stealer_log_format_combo.addItem("")
        self.stealer_log_format_combo.addItem("")
        self.stealer_log_format_combo.addItem("")
        self.stealer_log_format_combo.addItem("")
        self.file_structure_frame = QtWidgets.QFrame(self.formatOptionsTab)
        self.file_structure_frame.setGeometry(QtCore.QRect(220, 10, 261, 191))
        self.file_structure_frame.setStyleSheet("")
        self.file_structure_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.file_structure_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.file_structure_frame.setObjectName("file_structure_frame")
        self.label = QtWidgets.QLabel(self.file_structure_frame)
        self.label.setGeometry(QtCore.QRect(80, 0, 101, 31))
        font = QtGui.QFont()
        font.setFamily("HACKED")
        font.setPointSize(12)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.redline_file_structure_text_browser = QtWidgets.QTextBrowser(self.file_structure_frame)
        self.redline_file_structure_text_browser.setEnabled(True)
        self.redline_file_structure_text_browser.setGeometry(QtCore.QRect(0, 30, 261, 161))
        self.redline_file_structure_text_browser.setStyleSheet("")
        self.redline_file_structure_text_browser.setOpenLinks(False)
        self.redline_file_structure_text_browser.setObjectName("redline_file_structure_text_browser")
        self.racoon_file_structure_text_browser = QtWidgets.QTextBrowser(self.file_structure_frame)
        self.racoon_file_structure_text_browser.setEnabled(True)
        self.racoon_file_structure_text_browser.setGeometry(QtCore.QRect(0, 30, 261, 161))
        self.racoon_file_structure_text_browser.setOpenLinks(False)
        self.racoon_file_structure_text_browser.setObjectName("racoon_file_structure_text_browser")
        self.titan_file_structure_text_browser = QtWidgets.QTextBrowser(self.file_structure_frame)
        self.titan_file_structure_text_browser.setEnabled(True)
        self.titan_file_structure_text_browser.setGeometry(QtCore.QRect(0, 30, 261, 161))
        self.titan_file_structure_text_browser.setOpenLinks(False)
        self.titan_file_structure_text_browser.setObjectName("titan_file_structure_text_browser")
        self.worldwind_file_structure_text_browser = QtWidgets.QTextBrowser(self.file_structure_frame)
        self.worldwind_file_structure_text_browser.setEnabled(True)
        self.worldwind_file_structure_text_browser.setGeometry(QtCore.QRect(0, 30, 261, 161))
        self.worldwind_file_structure_text_browser.setOpenLinks(False)
        self.worldwind_file_structure_text_browser.setObjectName("worldwind_file_structure_text_browser")
        self.whitesnake_file_structure_text_browser = QtWidgets.QTextBrowser(self.file_structure_frame)
        self.whitesnake_file_structure_text_browser.setEnabled(True)
        self.whitesnake_file_structure_text_browser.setGeometry(QtCore.QRect(0, 30, 261, 161))
        self.whitesnake_file_structure_text_browser.setOpenLinks(False)
        self.whitesnake_file_structure_text_browser.setObjectName("whitesnake_file_structure_text_browser")
        self.label.raise_()
        self.whitesnake_file_structure_text_browser.raise_()
        self.titan_file_structure_text_browser.raise_()
        self.worldwind_file_structure_text_browser.raise_()
        self.racoon_file_structure_text_browser.raise_()
        self.redline_file_structure_text_browser.raise_()
        self.domain_managerButton = QtWidgets.QPushButton(self.formatOptionsTab)
        self.domain_managerButton.setEnabled(False)
        self.domain_managerButton.setGeometry(QtCore.QRect(830, 100, 111, 51))
        self.domain_managerButton.setObjectName("domain_managerButton")
        self.file_tree_structure_button = QtWidgets.QPushButton(self.formatOptionsTab)
        self.file_tree_structure_button.setGeometry(QtCore.QRect(10, 150, 201, 41))
        self.file_tree_structure_button.setObjectName("file_tree_structure_button")
        self.tab_widget.addTab(self.formatOptionsTab, "")
        self.generalComboOptionsTab = QtWidgets.QWidget()
        self.generalComboOptionsTab.setObjectName("generalComboOptionsTab")
        self.pasteButton = QtWidgets.QPushButton(self.generalComboOptionsTab)
        self.pasteButton.setGeometry(QtCore.QRect(20, 10, 80, 24))
        self.pasteButton.setObjectName("pasteButton")
        self.removeLinksButton = QtWidgets.QPushButton(self.generalComboOptionsTab)
        self.removeLinksButton.setGeometry(QtCore.QRect(770, 110, 81, 24))
        self.removeLinksButton.setObjectName("removeLinksButton")
        self.copyButton_2 = QtWidgets.QPushButton(self.generalComboOptionsTab)
        self.copyButton_2.setGeometry(QtCore.QRect(120, 10, 80, 24))
        self.copyButton_2.setObjectName("copyButton_2")
        self.removeEndingPunctuationButton = QtWidgets.QPushButton(self.generalComboOptionsTab)
        self.removeEndingPunctuationButton.setGeometry(QtCore.QRect(770, 40, 171, 24))
        self.removeEndingPunctuationButton.setObjectName("removeEndingPunctuationButton")
        self.remove_domainsButton = QtWidgets.QPushButton(self.generalComboOptionsTab)
        self.remove_domainsButton.setGeometry(QtCore.QRect(650, 40, 111, 24))
        self.remove_domainsButton.setObjectName("remove_domainsButton")
        self.removeDuplicatesButton = QtWidgets.QPushButton(self.generalComboOptionsTab)
        self.removeDuplicatesButton.setEnabled(True)
        self.removeDuplicatesButton.setGeometry(QtCore.QRect(860, 110, 91, 24))
        self.removeDuplicatesButton.setObjectName("removeDuplicatesButton")
        self.extract_md5Button = QtWidgets.QPushButton(self.generalComboOptionsTab)
        self.extract_md5Button.setGeometry(QtCore.QRect(20, 70, 80, 24))
        self.extract_md5Button.setObjectName("extract_md5Button")
        self.removeSpecialCharacterButton = QtWidgets.QPushButton(self.generalComboOptionsTab)
        self.removeSpecialCharacterButton.setGeometry(QtCore.QRect(770, 10, 171, 24))
        self.removeSpecialCharacterButton.setObjectName("removeSpecialCharacterButton")
        self.organizeLinesButton = QtWidgets.QPushButton(self.generalComboOptionsTab)
        self.organizeLinesButton.setGeometry(QtCore.QRect(120, 40, 81, 24))
        self.organizeLinesButton.setObjectName("organizeLinesButton")
        self.remove_trash_button = QtWidgets.QPushButton(self.generalComboOptionsTab)
        self.remove_trash_button.setGeometry(QtCore.QRect(650, 170, 111, 24))
        self.remove_trash_button.setObjectName("remove_trash_button")
        self.remove_capturesButton = QtWidgets.QPushButton(self.generalComboOptionsTab)
        self.remove_capturesButton.setGeometry(QtCore.QRect(650, 70, 111, 24))
        self.remove_capturesButton.setObjectName("remove_capturesButton")
        self.split_by_linesButton = QtWidgets.QPushButton(self.generalComboOptionsTab)
        self.split_by_linesButton.setGeometry(QtCore.QRect(120, 70, 81, 24))
        self.split_by_linesButton.setObjectName("split_by_linesButton")
        self.removeAfterSpace = QtWidgets.QPushButton(self.generalComboOptionsTab)
        self.removeAfterSpace.setGeometry(QtCore.QRect(650, 10, 111, 24))
        self.removeAfterSpace.setObjectName("removeAfterSpace")
        self.removeAfter_Tab_Space = QtWidgets.QPushButton(self.generalComboOptionsTab)
        self.removeAfter_Tab_Space.setGeometry(QtCore.QRect(650, 140, 111, 24))
        self.removeAfter_Tab_Space.setObjectName("removeAfter_Tab_Space")
        self.remove_inbetween_two_variablesButton = QtWidgets.QPushButton(self.generalComboOptionsTab)
        self.remove_inbetween_two_variablesButton.setGeometry(QtCore.QRect(770, 80, 171, 24))
        self.remove_inbetween_two_variablesButton.setObjectName("remove_inbetween_two_variablesButton")
        self.sort_remove_similarButton = QtWidgets.QPushButton(self.generalComboOptionsTab)
        self.sort_remove_similarButton.setGeometry(QtCore.QRect(650, 110, 111, 24))
        self.sort_remove_similarButton.setObjectName("sort_remove_similarButton")
        self.replace_linesButton = QtWidgets.QPushButton(self.generalComboOptionsTab)
        self.replace_linesButton.setGeometry(QtCore.QRect(20, 40, 80, 24))
        self.replace_linesButton.setObjectName("replace_linesButton")
        self.extract_ip_addressButton = QtWidgets.QPushButton(self.generalComboOptionsTab)
        self.extract_ip_addressButton.setGeometry(QtCore.QRect(120, 100, 81, 24))
        self.extract_ip_addressButton.setObjectName("extract_ip_addressButton")
        self.extract_phone_numberButton = QtWidgets.QPushButton(self.generalComboOptionsTab)
        self.extract_phone_numberButton.setGeometry(QtCore.QRect(10, 100, 101, 24))
        self.extract_phone_numberButton.setObjectName("extract_phone_numberButton")
        self.format_request_textedit = QtWidgets.QTextEdit(self.generalComboOptionsTab)
        self.format_request_textedit.setGeometry(QtCore.QRect(270, 170, 281, 31))
        self.format_request_textedit.setObjectName("format_request_textedit")
        self.remove_new_lines = QtWidgets.QPushButton(self.generalComboOptionsTab)
        self.remove_new_lines.setGeometry(QtCore.QRect(780, 150, 161, 41))
        self.remove_new_lines.setObjectName("remove_new_lines")
        self.consecutive_digits_button = QtWidgets.QPushButton(self.generalComboOptionsTab)
        self.consecutive_digits_button.setGeometry(QtCore.QRect(210, 10, 111, 24))
        self.consecutive_digits_button.setObjectName("consecutive_digits_button")
        self.remove_after_button = QtWidgets.QPushButton(self.generalComboOptionsTab)
        self.remove_after_button.setGeometry(QtCore.QRect(550, 10, 91, 31))
        self.remove_after_button.setObjectName("remove_after_button")
        self.remove_after_button_2 = QtWidgets.QPushButton(self.generalComboOptionsTab)
        self.remove_after_button_2.setGeometry(QtCore.QRect(550, 50, 91, 31))
        self.remove_after_button_2.setObjectName("remove_after_button_2")
        self.tab_widget.addTab(self.generalComboOptionsTab, "")
        self.password_format_tab = QtWidgets.QWidget()
        self.password_format_tab.setObjectName("password_format_tab")
        self.emailPasswordButton = QtWidgets.QPushButton(self.password_format_tab)
        self.emailPasswordButton.setEnabled(True)
        self.emailPasswordButton.setGeometry(QtCore.QRect(10, 50, 121, 24))
        self.emailPasswordButton.setObjectName("emailPasswordButton")
        self.usernamePasswordButton = QtWidgets.QPushButton(self.password_format_tab)
        self.usernamePasswordButton.setEnabled(True)
        self.usernamePasswordButton.setGeometry(QtCore.QRect(170, 50, 111, 24))
        self.usernamePasswordButton.setObjectName("usernamePasswordButton")
        self.memberIDPINButton = QtWidgets.QPushButton(self.password_format_tab)
        self.memberIDPINButton.setEnabled(True)
        self.memberIDPINButton.setGeometry(QtCore.QRect(450, 50, 101, 24))
        self.memberIDPINButton.setObjectName("memberIDPINButton")
        self.numberPasswordButton = QtWidgets.QPushButton(self.password_format_tab)
        self.numberPasswordButton.setEnabled(True)
        self.numberPasswordButton.setGeometry(QtCore.QRect(310, 50, 111, 24))
        self.numberPasswordButton.setObjectName("numberPasswordButton")
        self.wordpress_finder_button = QtWidgets.QPushButton(self.password_format_tab)
        self.wordpress_finder_button.setEnabled(True)
        self.wordpress_finder_button.setGeometry(QtCore.QRect(10, 110, 121, 24))
        self.wordpress_finder_button.setObjectName("wordpress_finder_button")
        self.business_emailfinder_button = QtWidgets.QPushButton(self.password_format_tab)
        self.business_emailfinder_button.setEnabled(True)
        self.business_emailfinder_button.setGeometry(QtCore.QRect(10, 140, 121, 24))
        self.business_emailfinder_button.setObjectName("business_emailfinder_button")
        self.governmentDomainsButton = QtWidgets.QPushButton(self.password_format_tab)
        self.governmentDomainsButton.setEnabled(True)
        self.governmentDomainsButton.setGeometry(QtCore.QRect(170, 140, 111, 24))
        self.governmentDomainsButton.setObjectName("governmentDomainsButton")
        self.server_information_button = QtWidgets.QPushButton(self.password_format_tab)
        self.server_information_button.setEnabled(True)
        self.server_information_button.setGeometry(QtCore.QRect(450, 140, 101, 24))
        self.server_information_button.setObjectName("server_information_button")
        self.cpanel_account_button = QtWidgets.QPushButton(self.password_format_tab)
        self.cpanel_account_button.setEnabled(True)
        self.cpanel_account_button.setGeometry(QtCore.QRect(170, 110, 111, 24))
        self.cpanel_account_button.setObjectName("cpanel_account_button")
        self.mailBoxesOptions_ComboButton = QtWidgets.QPushButton(self.password_format_tab)
        self.mailBoxesOptions_ComboButton.setEnabled(True)
        self.mailBoxesOptions_ComboButton.setGeometry(QtCore.QRect(560, 110, 21, 21))
        self.mailBoxesOptions_ComboButton.setObjectName("mailBoxesOptions_ComboButton")
        self.advertisingButton = QtWidgets.QPushButton(self.password_format_tab)
        self.advertisingButton.setEnabled(True)
        self.advertisingButton.setGeometry(QtCore.QRect(450, 80, 101, 24))
        self.advertisingButton.setObjectName("advertisingButton")
        self.socialForumsButton = QtWidgets.QPushButton(self.password_format_tab)
        self.socialForumsButton.setEnabled(True)
        self.socialForumsButton.setGeometry(QtCore.QRect(310, 110, 111, 24))
        self.socialForumsButton.setObjectName("socialForumsButton")
        self.mailbox_options_combo = QtWidgets.QComboBox(self.password_format_tab)
        self.mailbox_options_combo.setEnabled(True)
        self.mailbox_options_combo.setGeometry(QtCore.QRect(450, 110, 101, 24))
        self.mailbox_options_combo.setObjectName("mailbox_options_combo")
        self.mailbox_options_combo.addItem("")
        self.mailbox_options_combo.addItem("")
        self.mailbox_options_combo.addItem("")
        self.password_working_function_combo = QtWidgets.QComboBox(self.password_format_tab)
        self.password_working_function_combo.setEnabled(True)
        self.password_working_function_combo.setGeometry(QtCore.QRect(600, 10, 191, 24))
        self.password_working_function_combo.setObjectName("password_working_function_combo")
        self.password_working_function_combo.addItem("")
        self.password_working_function_combo.setItemText(0, "")
        self.password_working_function_combo.addItem("")
        self.password_working_function_combo.addItem("")
        self.frame_2 = QtWidgets.QFrame(self.password_format_tab)
        self.frame_2.setGeometry(QtCore.QRect(590, 50, 221, 151))
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.variables_label_2 = QtWidgets.QLabel(self.frame_2)
        self.variables_label_2.setGeometry(QtCore.QRect(70, 0, 71, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        self.variables_label_2.setFont(font)
        self.variables_label_2.setObjectName("variables_label_2")
        self.url_variable_label_2 = QtWidgets.QLabel(self.frame_2)
        self.url_variable_label_2.setGeometry(QtCore.QRect(10, 20, 61, 16))
        self.url_variable_label_2.setObjectName("url_variable_label_2")
        self.label_9 = QtWidgets.QLabel(self.frame_2)
        self.label_9.setGeometry(QtCore.QRect(10, 40, 111, 16))
        self.label_9.setObjectName("label_9")
        self.label_20 = QtWidgets.QLabel(self.frame_2)
        self.label_20.setGeometry(QtCore.QRect(10, 60, 101, 16))
        self.label_20.setObjectName("label_20")
        self.label_21 = QtWidgets.QLabel(self.frame_2)
        self.label_21.setGeometry(QtCore.QRect(120, 20, 81, 16))
        self.label_21.setObjectName("label_21")
        self.label_22 = QtWidgets.QLabel(self.frame_2)
        self.label_22.setGeometry(QtCore.QRect(120, 40, 91, 16))
        self.label_22.setObjectName("label_22")
        self.creditcard_variable_label_2 = QtWidgets.QLabel(self.frame_2)
        self.creditcard_variable_label_2.setGeometry(QtCore.QRect(120, 60, 101, 16))
        self.creditcard_variable_label_2.setObjectName("creditcard_variable_label_2")
        self.label_23 = QtWidgets.QLabel(self.frame_2)
        self.label_23.setGeometry(QtCore.QRect(120, 80, 91, 16))
        self.label_23.setObjectName("label_23")
        self.label_24 = QtWidgets.QLabel(self.frame_2)
        self.label_24.setGeometry(QtCore.QRect(120, 100, 91, 16))
        self.label_24.setObjectName("label_24")
        self.label_25 = QtWidgets.QLabel(self.frame_2)
        self.label_25.setGeometry(QtCore.QRect(10, 80, 101, 16))
        self.label_25.setObjectName("label_25")
        self.label_26 = QtWidgets.QLabel(self.frame_2)
        self.label_26.setGeometry(QtCore.QRect(10, 100, 101, 16))
        self.label_26.setObjectName("label_26")
        self.label_27 = QtWidgets.QLabel(self.frame_2)
        self.label_27.setGeometry(QtCore.QRect(10, 120, 101, 16))
        self.label_27.setObjectName("label_27")
        self.create_username_list_button = QtWidgets.QPushButton(self.password_format_tab)
        self.create_username_list_button.setEnabled(True)
        self.create_username_list_button.setGeometry(QtCore.QRect(10, 80, 121, 24))
        self.create_username_list_button.setObjectName("create_username_list_button")
        self.create_password_list = QtWidgets.QPushButton(self.password_format_tab)
        self.create_password_list.setEnabled(True)
        self.create_password_list.setGeometry(QtCore.QRect(170, 80, 111, 24))
        self.create_password_list.setObjectName("create_password_list")
        self.create_number_list = QtWidgets.QPushButton(self.password_format_tab)
        self.create_number_list.setEnabled(True)
        self.create_number_list.setGeometry(QtCore.QRect(310, 80, 111, 24))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.create_number_list.setFont(font)
        self.create_number_list.setObjectName("create_number_list")
        self.copyButton = QtWidgets.QPushButton(self.password_format_tab)
        self.copyButton.setEnabled(True)
        self.copyButton.setGeometry(QtCore.QRect(120, 10, 80, 24))
        self.copyButton.setObjectName("copyButton")
        self.tab2_pasteButton = QtWidgets.QPushButton(self.password_format_tab)
        self.tab2_pasteButton.setEnabled(True)
        self.tab2_pasteButton.setGeometry(QtCore.QRect(20, 10, 80, 24))
        self.tab2_pasteButton.setObjectName("tab2_pasteButton")
        icon = QtGui.QIcon.fromTheme("address-book-new")
        self.tab_widget.addTab(self.password_format_tab, icon, "")
        self.sortingLogsTab = QtWidgets.QWidget()
        self.sortingLogsTab.setObjectName("sortingLogsTab")
        self.sort_by_cap_dateButton = QtWidgets.QPushButton(self.sortingLogsTab)
        self.sort_by_cap_dateButton.setEnabled(False)
        self.sort_by_cap_dateButton.setGeometry(QtCore.QRect(10, 40, 121, 24))
        self.sort_by_cap_dateButton.setObjectName("sort_by_cap_dateButton")
        self.sort_password_by_weightButton = QtWidgets.QPushButton(self.sortingLogsTab)
        self.sort_password_by_weightButton.setEnabled(False)
        self.sort_password_by_weightButton.setGeometry(QtCore.QRect(140, 40, 101, 24))
        self.sort_password_by_weightButton.setObjectName("sort_password_by_weightButton")
        self.remove_duplicatesButton = QtWidgets.QPushButton(self.sortingLogsTab)
        self.remove_duplicatesButton.setEnabled(False)
        self.remove_duplicatesButton.setGeometry(QtCore.QRect(840, 170, 111, 24))
        self.remove_duplicatesButton.setObjectName("remove_duplicatesButton")
        self.sort_by_file_capturesButton = QtWidgets.QPushButton(self.sortingLogsTab)
        self.sort_by_file_capturesButton.setEnabled(False)
        self.sort_by_file_capturesButton.setGeometry(QtCore.QRect(10, 70, 121, 24))
        self.sort_by_file_capturesButton.setObjectName("sort_by_file_capturesButton")
        self.sort_stealer_typeButton = QtWidgets.QPushButton(self.sortingLogsTab)
        self.sort_stealer_typeButton.setEnabled(False)
        self.sort_stealer_typeButton.setGeometry(QtCore.QRect(710, 10, 111, 24))
        self.sort_stealer_typeButton.setObjectName("sort_stealer_typeButton")
        self.sort_by_geoButton = QtWidgets.QPushButton(self.sortingLogsTab)
        self.sort_by_geoButton.setEnabled(False)
        self.sort_by_geoButton.setGeometry(QtCore.QRect(110, 10, 111, 24))
        self.sort_by_geoButton.setObjectName("sort_by_geoButton")
        self.remove_skinnyButton = QtWidgets.QPushButton(self.sortingLogsTab)
        self.remove_skinnyButton.setEnabled(False)
        self.remove_skinnyButton.setGeometry(QtCore.QRect(10, 110, 121, 24))
        self.remove_skinnyButton.setObjectName("remove_skinnyButton")
        self.sort_tg_groupButton = QtWidgets.QPushButton(self.sortingLogsTab)
        self.sort_tg_groupButton.setEnabled(False)
        self.sort_tg_groupButton.setGeometry(QtCore.QRect(20, 10, 81, 24))
        self.sort_tg_groupButton.setObjectName("sort_tg_groupButton")
        self.sort_by_ads_logsButton = QtWidgets.QPushButton(self.sortingLogsTab)
        self.sort_by_ads_logsButton.setEnabled(False)
        self.sort_by_ads_logsButton.setGeometry(QtCore.QRect(140, 70, 121, 24))
        self.sort_by_ads_logsButton.setObjectName("sort_by_ads_logsButton")
        self.sort_by_business_capturesButton = QtWidgets.QPushButton(self.sortingLogsTab)
        self.sort_by_business_capturesButton.setEnabled(False)
        self.sort_by_business_capturesButton.setGeometry(QtCore.QRect(560, 40, 111, 24))
        self.sort_by_business_capturesButton.setObjectName("sort_by_business_capturesButton")
        self.create_a_file_tree_sortinglogsButton = QtWidgets.QPushButton(self.sortingLogsTab)
        self.create_a_file_tree_sortinglogsButton.setEnabled(False)
        self.create_a_file_tree_sortinglogsButton.setGeometry(QtCore.QRect(710, 170, 121, 24))
        self.create_a_file_tree_sortinglogsButton.setObjectName("create_a_file_tree_sortinglogsButton")
        self.sort_email_domainsButton = QtWidgets.QPushButton(self.sortingLogsTab)
        self.sort_email_domainsButton.setEnabled(False)
        self.sort_email_domainsButton.setGeometry(QtCore.QRect(560, 10, 111, 24))
        self.sort_email_domainsButton.setObjectName("sort_email_domainsButton")
        self.variable_text_edit_path = QtWidgets.QTextEdit(self.sortingLogsTab)
        self.variable_text_edit_path.setEnabled(False)
        self.variable_text_edit_path.setGeometry(QtCore.QRect(20, 160, 301, 31))
        self.variable_text_edit_path.setAutoFillBackground(False)
        self.variable_text_edit_path.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.variable_text_edit_path.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.variable_text_edit_path.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContentsOnFirstShow)
        self.variable_text_edit_path.setLineWrapMode(QtWidgets.QTextEdit.NoWrap)
        self.variable_text_edit_path.setMarkdown("")
        self.variable_text_edit_path.setObjectName("variable_text_edit_path")
        self.extractBySearchButton = QtWidgets.QPushButton(self.sortingLogsTab)
        self.extractBySearchButton.setEnabled(False)
        self.extractBySearchButton.setGeometry(QtCore.QRect(330, 160, 131, 31))
        self.extractBySearchButton.setObjectName("extractBySearchButton")
        self.sort_passwords_textButton = QtWidgets.QPushButton(self.sortingLogsTab)
        self.sort_passwords_textButton.setEnabled(False)
        self.sort_passwords_textButton.setGeometry(QtCore.QRect(710, 40, 111, 24))
        self.sort_passwords_textButton.setObjectName("sort_passwords_textButton")
        self.get_log_stats_button = QtWidgets.QPushButton(self.sortingLogsTab)
        self.get_log_stats_button.setGeometry(QtCore.QRect(870, 10, 80, 51))
        self.get_log_stats_button.setObjectName("get_log_stats_button")
        self.seperator_value_text_edit = QtWidgets.QTextEdit(self.sortingLogsTab)
        self.seperator_value_text_edit.setEnabled(False)
        self.seperator_value_text_edit.setGeometry(QtCore.QRect(470, 160, 151, 31))
        self.seperator_value_text_edit.setAutoFillBackground(False)
        self.seperator_value_text_edit.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.seperator_value_text_edit.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.seperator_value_text_edit.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContentsOnFirstShow)
        self.seperator_value_text_edit.setLineWrapMode(QtWidgets.QTextEdit.NoWrap)
        self.seperator_value_text_edit.setMarkdown("")
        self.seperator_value_text_edit.setObjectName("seperator_value_text_edit")
        self.sort_by_ads_logsButton_2 = QtWidgets.QPushButton(self.sortingLogsTab)
        self.sort_by_ads_logsButton_2.setEnabled(False)
        self.sort_by_ads_logsButton_2.setGeometry(QtCore.QRect(710, 70, 111, 24))
        self.sort_by_ads_logsButton_2.setObjectName("sort_by_ads_logsButton_2")
        self.tab_widget.addTab(self.sortingLogsTab, "")
        self.sortingFilesTab = QtWidgets.QWidget()
        self.sortingFilesTab.setObjectName("sortingFilesTab")
        self.telegram_folder_sorting_button = QtWidgets.QPushButton(self.sortingFilesTab)
        self.telegram_folder_sorting_button.setEnabled(True)
        self.telegram_folder_sorting_button.setGeometry(QtCore.QRect(420, 80, 111, 24))
        self.telegram_folder_sorting_button.setObjectName("telegram_folder_sorting_button")
        self.authy_desktop_button = QtWidgets.QPushButton(self.sortingFilesTab)
        self.authy_desktop_button.setEnabled(True)
        self.authy_desktop_button.setGeometry(QtCore.QRect(150, 20, 111, 24))
        self.authy_desktop_button.setObjectName("authy_desktop_button")
        self.chrome_extensions_button = QtWidgets.QPushButton(self.sortingFilesTab)
        self.chrome_extensions_button.setEnabled(True)
        self.chrome_extensions_button.setGeometry(QtCore.QRect(420, 20, 111, 24))
        self.chrome_extensions_button.setObjectName("chrome_extensions_button")
        self.desktop_wallet_button = QtWidgets.QPushButton(self.sortingFilesTab)
        self.desktop_wallet_button.setEnabled(True)
        self.desktop_wallet_button.setGeometry(QtCore.QRect(550, 20, 111, 24))
        self.desktop_wallet_button.setObjectName("desktop_wallet_button")
        self.browser_wallet_sort_button = QtWidgets.QPushButton(self.sortingFilesTab)
        self.browser_wallet_sort_button.setEnabled(True)
        self.browser_wallet_sort_button.setGeometry(QtCore.QRect(550, 50, 111, 24))
        self.browser_wallet_sort_button.setObjectName("browser_wallet_sort_button")
        self.browser_2fa_extension_button = QtWidgets.QPushButton(self.sortingFilesTab)
        self.browser_2fa_extension_button.setEnabled(True)
        self.browser_2fa_extension_button.setGeometry(QtCore.QRect(420, 50, 111, 24))
        self.browser_2fa_extension_button.setObjectName("browser_2fa_extension_button")
        self.newtextdocuments_button = QtWidgets.QPushButton(self.sortingFilesTab)
        self.newtextdocuments_button.setEnabled(True)
        self.newtextdocuments_button.setGeometry(QtCore.QRect(280, 20, 121, 24))
        self.newtextdocuments_button.setObjectName("newtextdocuments_button")
        self.text_named_sorting_button = QtWidgets.QPushButton(self.sortingFilesTab)
        self.text_named_sorting_button.setEnabled(True)
        self.text_named_sorting_button.setGeometry(QtCore.QRect(280, 50, 121, 24))
        self.text_named_sorting_button.setObjectName("text_named_sorting_button")
        self.pgp_button = QtWidgets.QPushButton(self.sortingFilesTab)
        self.pgp_button.setEnabled(True)
        self.pgp_button.setGeometry(QtCore.QRect(150, 50, 111, 24))
        self.pgp_button.setObjectName("pgp_button")
        self.encryption_keys_button = QtWidgets.QPushButton(self.sortingFilesTab)
        self.encryption_keys_button.setEnabled(True)
        self.encryption_keys_button.setGeometry(QtCore.QRect(150, 80, 111, 24))
        self.encryption_keys_button.setObjectName("encryption_keys_button")
        self.auth_files_button = QtWidgets.QPushButton(self.sortingFilesTab)
        self.auth_files_button.setEnabled(False)
        self.auth_files_button.setGeometry(QtCore.QRect(20, 50, 111, 24))
        self.auth_files_button.setObjectName("auth_files_button")
        self.sort_by_cookies_button = QtWidgets.QPushButton(self.sortingFilesTab)
        self.sort_by_cookies_button.setEnabled(False)
        self.sort_by_cookies_button.setGeometry(QtCore.QRect(20, 20, 111, 24))
        self.sort_by_cookies_button.setObjectName("sort_by_cookies_button")
        self.remote_desktop_button = QtWidgets.QPushButton(self.sortingFilesTab)
        self.remote_desktop_button.setEnabled(False)
        self.remote_desktop_button.setGeometry(QtCore.QRect(20, 80, 111, 24))
        self.remote_desktop_button.setObjectName("remote_desktop_button")
        self.discord_sorting_button = QtWidgets.QPushButton(self.sortingFilesTab)
        self.discord_sorting_button.setEnabled(True)
        self.discord_sorting_button.setGeometry(QtCore.QRect(550, 80, 111, 24))
        self.discord_sorting_button.setObjectName("discord_sorting_button")
        self.control_panels_sort_button = QtWidgets.QPushButton(self.sortingFilesTab)
        self.control_panels_sort_button.setEnabled(True)
        self.control_panels_sort_button.setGeometry(QtCore.QRect(280, 80, 121, 24))
        self.control_panels_sort_button.setObjectName("control_panels_sort_button")
        self.button_scrape_keys = QtWidgets.QPushButton(self.sortingFilesTab)
        self.button_scrape_keys.setEnabled(False)
        self.button_scrape_keys.setGeometry(QtCore.QRect(20, 170, 71, 24))
        self.button_scrape_keys.setObjectName("button_scrape_keys")
        self.button_scrape_banking_data = QtWidgets.QPushButton(self.sortingFilesTab)
        self.button_scrape_banking_data.setEnabled(False)
        self.button_scrape_banking_data.setGeometry(QtCore.QRect(100, 170, 121, 24))
        self.button_scrape_banking_data.setObjectName("button_scrape_banking_data")
        self.button_scrape_backup_codes = QtWidgets.QPushButton(self.sortingFilesTab)
        self.button_scrape_backup_codes.setEnabled(False)
        self.button_scrape_backup_codes.setGeometry(QtCore.QRect(230, 170, 121, 24))
        self.button_scrape_backup_codes.setObjectName("button_scrape_backup_codes")
        self.button_scrape_security_data = QtWidgets.QPushButton(self.sortingFilesTab)
        self.button_scrape_security_data.setEnabled(False)
        self.button_scrape_security_data.setGeometry(QtCore.QRect(360, 170, 151, 24))
        self.button_scrape_security_data.setObjectName("button_scrape_security_data")
        self.pushButton_14 = QtWidgets.QPushButton(self.sortingFilesTab)
        self.pushButton_14.setGeometry(QtCore.QRect(870, 10, 80, 51))
        self.pushButton_14.setObjectName("pushButton_14")
        self.tab_widget.addTab(self.sortingFilesTab, "")
        self.sortingCookiesTab = QtWidgets.QWidget()
        self.sortingCookiesTab.setObjectName("sortingCookiesTab")
        self.sorting_cookies_sort_by_domain = QtWidgets.QPushButton(self.sortingCookiesTab)
        self.sorting_cookies_sort_by_domain.setEnabled(False)
        self.sorting_cookies_sort_by_domain.setGeometry(QtCore.QRect(20, 20, 111, 24))
        self.sorting_cookies_sort_by_domain.setObjectName("sorting_cookies_sort_by_domain")
        self.sorting_cookies_sort_by_quantity = QtWidgets.QPushButton(self.sortingCookiesTab)
        self.sorting_cookies_sort_by_quantity.setEnabled(False)
        self.sorting_cookies_sort_by_quantity.setGeometry(QtCore.QRect(150, 20, 111, 24))
        self.sorting_cookies_sort_by_quantity.setObjectName("sorting_cookies_sort_by_quantity")
        self.sorting_cookies_sort_by_values_button = QtWidgets.QPushButton(self.sortingCookiesTab)
        self.sorting_cookies_sort_by_values_button.setEnabled(False)
        self.sorting_cookies_sort_by_values_button.setGeometry(QtCore.QRect(280, 20, 111, 24))
        self.sorting_cookies_sort_by_values_button.setObjectName("sorting_cookies_sort_by_values_button")
        self.sorting_cookies_keywords_button = QtWidgets.QPushButton(self.sortingCookiesTab)
        self.sorting_cookies_keywords_button.setEnabled(False)
        self.sorting_cookies_keywords_button.setGeometry(QtCore.QRect(550, 20, 111, 24))
        self.sorting_cookies_keywords_button.setObjectName("sorting_cookies_keywords_button")
        self.sorting_cookies_netscape_to_json_button = QtWidgets.QPushButton(self.sortingCookiesTab)
        self.sorting_cookies_netscape_to_json_button.setEnabled(False)
        self.sorting_cookies_netscape_to_json_button.setGeometry(QtCore.QRect(20, 50, 111, 24))
        self.sorting_cookies_netscape_to_json_button.setObjectName("sorting_cookies_netscape_to_json_button")
        self.sorting_cookies_json_to_netscape_button = QtWidgets.QPushButton(self.sortingCookiesTab)
        self.sorting_cookies_json_to_netscape_button.setEnabled(False)
        self.sorting_cookies_json_to_netscape_button.setGeometry(QtCore.QRect(150, 50, 111, 24))
        self.sorting_cookies_json_to_netscape_button.setObjectName("sorting_cookies_json_to_netscape_button")
        self.sorting_cookies_save_password_checkbox = QtWidgets.QCheckBox(self.sortingCookiesTab)
        self.sorting_cookies_save_password_checkbox.setEnabled(False)
        self.sorting_cookies_save_password_checkbox.setGeometry(QtCore.QRect(780, 170, 171, 22))
        self.sorting_cookies_save_password_checkbox.setObjectName("sorting_cookies_save_password_checkbox")
        self.sorting_cookies_save_login_cookie_capture_checkbox = QtWidgets.QCheckBox(self.sortingCookiesTab)
        self.sorting_cookies_save_login_cookie_capture_checkbox.setEnabled(False)
        self.sorting_cookies_save_login_cookie_capture_checkbox.setGeometry(QtCore.QRect(780, 150, 181, 22))
        self.sorting_cookies_save_login_cookie_capture_checkbox.setObjectName("sorting_cookies_save_login_cookie_capture_checkbox")
        self.sorting_cookies_save_autofill_data_button = QtWidgets.QCheckBox(self.sortingCookiesTab)
        self.sorting_cookies_save_autofill_data_button.setEnabled(False)
        self.sorting_cookies_save_autofill_data_button.setGeometry(QtCore.QRect(780, 130, 151, 22))
        self.sorting_cookies_save_autofill_data_button.setObjectName("sorting_cookies_save_autofill_data_button")
        self.sorting_cookies_fix_cookie_misprintButton = QtWidgets.QPushButton(self.sortingCookiesTab)
        self.sorting_cookies_fix_cookie_misprintButton.setEnabled(False)
        self.sorting_cookies_fix_cookie_misprintButton.setGeometry(QtCore.QRect(280, 50, 111, 24))
        self.sorting_cookies_fix_cookie_misprintButton.setObjectName("sorting_cookies_fix_cookie_misprintButton")
        self.sorting_cookies_count_total_values = QtWidgets.QPushButton(self.sortingCookiesTab)
        self.sorting_cookies_count_total_values.setEnabled(False)
        self.sorting_cookies_count_total_values.setGeometry(QtCore.QRect(410, 20, 111, 24))
        self.sorting_cookies_count_total_values.setObjectName("sorting_cookies_count_total_values")
        self.get_file_stats_button = QtWidgets.QPushButton(self.sortingCookiesTab)
        self.get_file_stats_button.setEnabled(True)
        self.get_file_stats_button.setGeometry(QtCore.QRect(860, 10, 91, 51))
        self.get_file_stats_button.setObjectName("get_file_stats_button")
        self.tab_widget.addTab(self.sortingCookiesTab, "")
        self.bankingFeaturesTab = QtWidgets.QWidget()
        self.bankingFeaturesTab.setObjectName("bankingFeaturesTab")
        self.capture_security_quest_answer_button = QtWidgets.QPushButton(self.bankingFeaturesTab)
        self.capture_security_quest_answer_button.setEnabled(False)
        self.capture_security_quest_answer_button.setGeometry(QtCore.QRect(10, 20, 141, 24))
        self.capture_security_quest_answer_button.setObjectName("capture_security_quest_answer_button")
        self.capture_all_banking_logs_button = QtWidgets.QPushButton(self.bankingFeaturesTab)
        self.capture_all_banking_logs_button.setEnabled(False)
        self.capture_all_banking_logs_button.setGeometry(QtCore.QRect(160, 20, 141, 24))
        self.capture_all_banking_logs_button.setObjectName("capture_all_banking_logs_button")
        self.parse_fulls_button = QtWidgets.QPushButton(self.bankingFeaturesTab)
        self.parse_fulls_button.setEnabled(False)
        self.parse_fulls_button.setGeometry(QtCore.QRect(420, 20, 111, 24))
        self.parse_fulls_button.setObjectName("parse_fulls_button")
        self.sort_cc_dataButton = QtWidgets.QPushButton(self.bankingFeaturesTab)
        self.sort_cc_dataButton.setEnabled(True)
        self.sort_cc_dataButton.setGeometry(QtCore.QRect(560, 20, 91, 24))
        self.sort_cc_dataButton.setObjectName("sort_cc_dataButton")
        self.sort_cc_data_with_cvcButton = QtWidgets.QPushButton(self.bankingFeaturesTab)
        self.sort_cc_data_with_cvcButton.setEnabled(False)
        self.sort_cc_data_with_cvcButton.setGeometry(QtCore.QRect(670, 20, 131, 24))
        self.sort_cc_data_with_cvcButton.setObjectName("sort_cc_data_with_cvcButton")
        self.sort_by_remitliesButton = QtWidgets.QPushButton(self.bankingFeaturesTab)
        self.sort_by_remitliesButton.setEnabled(False)
        self.sort_by_remitliesButton.setGeometry(QtCore.QRect(310, 20, 101, 24))
        self.sort_by_remitliesButton.setObjectName("sort_by_remitliesButton")
        self.sort_by_remetliescookiesButton = QtWidgets.QPushButton(self.bankingFeaturesTab)
        self.sort_by_remetliescookiesButton.setEnabled(False)
        self.sort_by_remetliescookiesButton.setGeometry(QtCore.QRect(10, 50, 141, 24))
        self.sort_by_remetliescookiesButton.setObjectName("sort_by_remetliescookiesButton")
        self.search_inside_new_text_docs = QtWidgets.QPushButton(self.bankingFeaturesTab)
        self.search_inside_new_text_docs.setEnabled(False)
        self.search_inside_new_text_docs.setGeometry(QtCore.QRect(340, 50, 161, 24))
        self.search_inside_new_text_docs.setObjectName("search_inside_new_text_docs")
        self.capture_2fa_files_bypassButton = QtWidgets.QPushButton(self.bankingFeaturesTab)
        self.capture_2fa_files_bypassButton.setEnabled(False)
        self.capture_2fa_files_bypassButton.setGeometry(QtCore.QRect(680, 50, 121, 24))
        self.capture_2fa_files_bypassButton.setObjectName("capture_2fa_files_bypassButton")
        self.banking_leads_emailButton = QtWidgets.QPushButton(self.bankingFeaturesTab)
        self.banking_leads_emailButton.setEnabled(False)
        self.banking_leads_emailButton.setGeometry(QtCore.QRect(810, 20, 141, 24))
        self.banking_leads_emailButton.setObjectName("banking_leads_emailButton")
        self.banking_leads_phoneButton = QtWidgets.QPushButton(self.bankingFeaturesTab)
        self.banking_leads_phoneButton.setEnabled(False)
        self.banking_leads_phoneButton.setGeometry(QtCore.QRect(170, 50, 141, 24))
        self.banking_leads_phoneButton.setObjectName("banking_leads_phoneButton")
        self.scan_potental_phishersButton = QtWidgets.QPushButton(self.bankingFeaturesTab)
        self.scan_potental_phishersButton.setEnabled(False)
        self.scan_potental_phishersButton.setGeometry(QtCore.QRect(520, 50, 141, 24))
        self.scan_potental_phishersButton.setObjectName("scan_potental_phishersButton")
        self.tab_widget.addTab(self.bankingFeaturesTab, "")
        self.requestedOptionsTab = QtWidgets.QWidget()
        self.requestedOptionsTab.setObjectName("requestedOptionsTab")
        self.columnView = QtWidgets.QColumnView(self.requestedOptionsTab)
        self.columnView.setGeometry(QtCore.QRect(690, 10, 256, 192))
        self.columnView.setObjectName("columnView")
        self.pushButton = QtWidgets.QPushButton(self.requestedOptionsTab)
        self.pushButton.setEnabled(True)
        self.pushButton.setGeometry(QtCore.QRect(10, 10, 80, 24))
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.requestedOptionsTab)
        self.pushButton_2.setEnabled(True)
        self.pushButton_2.setGeometry(QtCore.QRect(100, 10, 80, 24))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.requestedOptionsTab)
        self.pushButton_3.setEnabled(True)
        self.pushButton_3.setGeometry(QtCore.QRect(190, 10, 80, 24))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_4 = QtWidgets.QPushButton(self.requestedOptionsTab)
        self.pushButton_4.setEnabled(True)
        self.pushButton_4.setGeometry(QtCore.QRect(280, 10, 80, 24))
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_5 = QtWidgets.QPushButton(self.requestedOptionsTab)
        self.pushButton_5.setEnabled(True)
        self.pushButton_5.setGeometry(QtCore.QRect(10, 50, 80, 24))
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_6 = QtWidgets.QPushButton(self.requestedOptionsTab)
        self.pushButton_6.setEnabled(True)
        self.pushButton_6.setGeometry(QtCore.QRect(280, 50, 80, 24))
        self.pushButton_6.setObjectName("pushButton_6")
        self.pushButton_7 = QtWidgets.QPushButton(self.requestedOptionsTab)
        self.pushButton_7.setEnabled(True)
        self.pushButton_7.setGeometry(QtCore.QRect(190, 50, 80, 24))
        self.pushButton_7.setObjectName("pushButton_7")
        self.pushButton_8 = QtWidgets.QPushButton(self.requestedOptionsTab)
        self.pushButton_8.setEnabled(True)
        self.pushButton_8.setGeometry(QtCore.QRect(100, 50, 80, 24))
        self.pushButton_8.setObjectName("pushButton_8")
        self.pushButton_9 = QtWidgets.QPushButton(self.requestedOptionsTab)
        self.pushButton_9.setEnabled(True)
        self.pushButton_9.setGeometry(QtCore.QRect(10, 90, 80, 24))
        self.pushButton_9.setObjectName("pushButton_9")
        self.pushButton_10 = QtWidgets.QPushButton(self.requestedOptionsTab)
        self.pushButton_10.setEnabled(True)
        self.pushButton_10.setGeometry(QtCore.QRect(280, 90, 80, 24))
        self.pushButton_10.setObjectName("pushButton_10")
        self.pushButton_11 = QtWidgets.QPushButton(self.requestedOptionsTab)
        self.pushButton_11.setEnabled(True)
        self.pushButton_11.setGeometry(QtCore.QRect(190, 90, 80, 24))
        self.pushButton_11.setObjectName("pushButton_11")
        self.pushButton_12 = QtWidgets.QPushButton(self.requestedOptionsTab)
        self.pushButton_12.setEnabled(True)
        self.pushButton_12.setGeometry(QtCore.QRect(100, 90, 80, 24))
        self.pushButton_12.setObjectName("pushButton_12")
        self.tab_widget.addTab(self.requestedOptionsTab, "")
        self.requestedOptionsTab2 = QtWidgets.QWidget()
        self.requestedOptionsTab2.setObjectName("requestedOptionsTab2")
        self.removeAfterSpace_2 = QtWidgets.QPushButton(self.requestedOptionsTab2)
        self.removeAfterSpace_2.setEnabled(False)
        self.removeAfterSpace_2.setGeometry(QtCore.QRect(10, 10, 171, 24))
        self.removeAfterSpace_2.setObjectName("removeAfterSpace_2")
        self.tab_widget.addTab(self.requestedOptionsTab2, "")
        self.savedResultsTextBox = QtWidgets.QTextEdit(self.centralwidget)
        self.savedResultsTextBox.setGeometry(QtCore.QRect(120, 30, 241, 31))
        self.savedResultsTextBox.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.savedResultsTextBox.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.savedResultsTextBox.setLineWidth(3)
        self.savedResultsTextBox.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.savedResultsTextBox.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.savedResultsTextBox.setLineWrapMode(QtWidgets.QTextEdit.NoWrap)
        self.savedResultsTextBox.setObjectName("savedResultsTextBox")
        self.thread_box = QtWidgets.QSpinBox(self.centralwidget)
        self.thread_box.setGeometry(QtCore.QRect(900, 20, 61, 25))
        self.thread_box.setFrame(True)
        self.thread_box.setMinimum(1)
        self.thread_box.setObjectName("thread_box")
        self.variable_frame = QtWidgets.QFrame(self.centralwidget)
        self.variable_frame.setGeometry(QtCore.QRect(760, 240, 212, 131))
        self.variable_frame.setAutoFillBackground(False)
        self.variable_frame.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.variable_frame.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.variable_frame.setObjectName("variable_frame")
        self.variables_label = QtWidgets.QLabel(self.variable_frame)
        self.variables_label.setGeometry(QtCore.QRect(80, 0, 71, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        self.variables_label.setFont(font)
        self.variables_label.setObjectName("variables_label")
        self.url_variable_label = QtWidgets.QLabel(self.variable_frame)
        self.url_variable_label.setGeometry(QtCore.QRect(0, 20, 111, 21))
        self.url_variable_label.setObjectName("url_variable_label")
        self.variable_text_username = QtWidgets.QLabel(self.variable_frame)
        self.variable_text_username.setGeometry(QtCore.QRect(0, 40, 111, 21))
        self.variable_text_username.setObjectName("variable_text_username")
        self.variable_text_password = QtWidgets.QLabel(self.variable_frame)
        self.variable_text_password.setGeometry(QtCore.QRect(0, 60, 111, 21))
        self.variable_text_password.setObjectName("variable_text_password")
        self.variable_text_email = QtWidgets.QLabel(self.variable_frame)
        self.variable_text_email.setGeometry(QtCore.QRect(110, 20, 101, 21))
        self.variable_text_email.setObjectName("variable_text_email")
        self.variable_text_ip = QtWidgets.QLabel(self.variable_frame)
        self.variable_text_ip.setGeometry(QtCore.QRect(110, 40, 101, 21))
        self.variable_text_ip.setFrameShape(QtWidgets.QFrame.Box)
        self.variable_text_ip.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.variable_text_ip.setObjectName("variable_text_ip")
        self.creditcard_variable_label = QtWidgets.QLabel(self.variable_frame)
        self.creditcard_variable_label.setGeometry(QtCore.QRect(110, 60, 101, 21))
        self.creditcard_variable_label.setObjectName("creditcard_variable_label")
        self.variable_text_cvc = QtWidgets.QLabel(self.variable_frame)
        self.variable_text_cvc.setGeometry(QtCore.QRect(110, 80, 101, 21))
        self.variable_text_cvc.setObjectName("variable_text_cvc")
        self.variable_text_anrn = QtWidgets.QLabel(self.variable_frame)
        self.variable_text_anrn.setGeometry(QtCore.QRect(110, 100, 101, 31))
        self.variable_text_anrn.setObjectName("variable_text_anrn")
        self.variable_text_fullz = QtWidgets.QLabel(self.variable_frame)
        self.variable_text_fullz.setGeometry(QtCore.QRect(0, 80, 111, 21))
        self.variable_text_fullz.setObjectName("variable_text_fullz")
        self.variable_text_phone = QtWidgets.QLabel(self.variable_frame)
        self.variable_text_phone.setGeometry(QtCore.QRect(0, 100, 111, 31))
        self.variable_text_phone.setObjectName("variable_text_phone")
        self.directory_path_label_main = QtWidgets.QLabel(self.centralwidget)
        self.directory_path_label_main.setGeometry(QtCore.QRect(10, 0, 111, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(False)
        self.directory_path_label_main.setFont(font)
        self.directory_path_label_main.setObjectName("directory_path_label_main")
        self.directory_path_label_main_2 = QtWidgets.QLabel(self.centralwidget)
        self.directory_path_label_main_2.setGeometry(QtCore.QRect(10, 30, 111, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(False)
        self.directory_path_label_main_2.setFont(font)
        self.directory_path_label_main_2.setObjectName("directory_path_label_main_2")
        self.set_directory_path_button = QtWidgets.QPushButton(self.centralwidget)
        self.set_directory_path_button.setGeometry(QtCore.QRect(370, 0, 101, 21))
        self.set_directory_path_button.setObjectName("set_directory_path_button")
        self.save_results_action_button = QtWidgets.QPushButton(self.centralwidget)
        self.save_results_action_button.setGeometry(QtCore.QRect(370, 30, 101, 21))
        self.save_results_action_button.setObjectName("save_results_action_button")
        self.enable_wordwrap_checkbox = QtWidgets.QCheckBox(self.centralwidget)
        self.enable_wordwrap_checkbox.setGeometry(QtCore.QRect(150, 400, 131, 22))
        self.enable_wordwrap_checkbox.setObjectName("enable_wordwrap_checkbox")
        self.resultswidgets = QtWidgets.QTabWidget(self.centralwidget)
        self.resultswidgets.setGeometry(QtCore.QRect(250, 60, 291, 331))
        self.resultswidgets.setStyleSheet("QTabWidget::pane {\n"
"    background-color: black;\n"
"}\n"
"\n"
"QTabWidget::tab-bar {\n"
"    alignment: left;\n"
"}\n"
"\n"
"QTabBar::tab {\n"
"    background-color: black;\n"
"    color: white;\n"
"    border: 2px solid teal;\n"
"    border-top-left-radius: 4px;\n"
"    border-top-right-radius: 4px;\n"
"    padding: 8px;\n"
"}\n"
"\n"
"QTabBar::tab:selected {\n"
"    background-color: teal;\n"
"    border-color: teal;\n"
"}")
        self.resultswidgets.setObjectName("resultswidgets")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.output_text = QtWidgets.QTextBrowser(self.tab)
        self.output_text.setGeometry(QtCore.QRect(0, 0, 291, 291))
        self.output_text.setObjectName("output_text")
        self.resultswidgets.addTab(self.tab, "")
        self.removed_data_tab = QtWidgets.QWidget()
        self.removed_data_tab.setObjectName("removed_data_tab")
        self.removed_data_text = QtWidgets.QTextBrowser(self.removed_data_tab)
        self.removed_data_text.setGeometry(QtCore.QRect(0, 0, 291, 291))
        self.removed_data_text.setObjectName("removed_data_text")
        self.resultswidgets.addTab(self.removed_data_tab, "")
        self.consolewidget = QtWidgets.QWidget(self.centralwidget)
        self.consolewidget.setGeometry(QtCore.QRect(680, 50, 291, 141))
        self.consolewidget.setObjectName("consolewidget")
        self.console_widget_textedit = QtWidgets.QPlainTextEdit(self.consolewidget)
        self.console_widget_textedit.setGeometry(QtCore.QRect(0, 0, 291, 141))
        self.console_widget_textedit.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.console_widget_textedit.setLineWrapMode(QtWidgets.QPlainTextEdit.NoWrap)
        self.console_widget_textedit.setReadOnly(True)
        self.console_widget_textedit.setObjectName("console_widget_textedit")
        self.remove_empty_lines_checkbox = QtWidgets.QCheckBox(self.centralwidget)
        self.remove_empty_lines_checkbox.setGeometry(QtCore.QRect(290, 400, 131, 22))
        self.remove_empty_lines_checkbox.setChecked(True)
        self.remove_empty_lines_checkbox.setTristate(False)
        self.remove_empty_lines_checkbox.setObjectName("remove_empty_lines_checkbox")
        self.progressBar = QtWidgets.QProgressBar(self.centralwidget)
        self.progressBar.setGeometry(QtCore.QRect(650, 390, 321, 23))
        font = QtGui.QFont()
        font.setFamily("HACKED")
        font.setPointSize(13)
        font.setBold(False)
        self.progressBar.setFont(font)
        self.progressBar.setAutoFillBackground(False)
        self.progressBar.setStyleSheet("QProgressBar {\n"
"    border: 2px solid grey;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QProgressBar::chunk {\n"
"    background-color: #05B8CC;\n"
"    width: 20px;\n"
"}\n"
"QProgressBar {\n"
"    border: 2px solid grey;\n"
"    border-radius: 5px;\n"
"    text-align: center;\n"
"}")
        self.progressBar.setProperty("value", 0)
        self.progressBar.setObjectName("progressBar")
        self.import_requests_button = QtWidgets.QPushButton(self.centralwidget)
        self.import_requests_button.setEnabled(False)
        self.import_requests_button.setGeometry(QtCore.QRect(19, 400, 101, 24))
        self.import_requests_button.setObjectName("import_requests_button")
        self.StealerLog_File_Structure_label = QtWidgets.QLabel(self.centralwidget)
        self.StealerLog_File_Structure_label.setGeometry(QtCore.QRect(10, 690, 171, 21))
        font = QtGui.QFont()
        font.setFamily("HACKED")
        font.setPointSize(11)
        font.setBold(False)
        self.StealerLog_File_Structure_label.setFont(font)
        self.StealerLog_File_Structure_label.setObjectName("StealerLog_File_Structure_label")
        self.file_directory_path_label = QtWidgets.QLabel(self.centralwidget)
        self.file_directory_path_label.setGeometry(QtCore.QRect(460, 690, 171, 21))
        font = QtGui.QFont()
        font.setFamily("HACKED")
        font.setPointSize(11)
        font.setBold(False)
        self.file_directory_path_label.setFont(font)
        self.file_directory_path_label.setObjectName("file_directory_path_label")
        self.stealer_log_file_structure_path = QtWidgets.QTextEdit(self.centralwidget)
        self.stealer_log_file_structure_path.setEnabled(False)
        self.stealer_log_file_structure_path.setGeometry(QtCore.QRect(180, 690, 271, 21))
        self.stealer_log_file_structure_path.setAutoFillBackground(True)
        self.stealer_log_file_structure_path.setInputMethodHints(QtCore.Qt.ImhNone)
        self.stealer_log_file_structure_path.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.stealer_log_file_structure_path.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.stealer_log_file_structure_path.setReadOnly(True)
        self.stealer_log_file_structure_path.setObjectName("stealer_log_file_structure_path")
        self.file_directory_path_path = QtWidgets.QTextEdit(self.centralwidget)
        self.file_directory_path_path.setEnabled(False)
        self.file_directory_path_path.setGeometry(QtCore.QRect(640, 690, 231, 21))
        self.file_directory_path_path.setAutoFillBackground(True)
        self.file_directory_path_path.setInputMethodHints(QtCore.Qt.ImhNone)
        self.file_directory_path_path.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.file_directory_path_path.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.file_directory_path_path.setReadOnly(True)
        self.file_directory_path_path.setObjectName("file_directory_path_path")
        self.totalLinesNumber = QtWidgets.QLCDNumber(self.centralwidget)
        self.totalLinesNumber.setGeometry(QtCore.QRect(690, 200, 61, 21))
        self.totalLinesNumber.setObjectName("totalLinesNumber")
        self.lcdNumber_2 = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber_2.setGeometry(QtCore.QRect(690, 240, 61, 21))
        self.lcdNumber_2.setObjectName("lcdNumber_2")
        self.lcdNumber_3 = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber_3.setGeometry(QtCore.QRect(690, 280, 61, 21))
        self.lcdNumber_3.setObjectName("lcdNumber_3")
        self.total_lines_label = QtWidgets.QLabel(self.centralwidget)
        self.total_lines_label.setGeometry(QtCore.QRect(600, 200, 91, 21))
        font = QtGui.QFont()
        font.setFamily("HACKED")
        font.setPointSize(13)
        font.setBold(False)
        self.total_lines_label.setFont(font)
        self.total_lines_label.setObjectName("total_lines_label")
        self.lines_left_Label = QtWidgets.QLabel(self.centralwidget)
        self.lines_left_Label.setGeometry(QtCore.QRect(590, 240, 101, 21))
        font = QtGui.QFont()
        font.setFamily("HACKED")
        font.setPointSize(13)
        font.setBold(False)
        self.lines_left_Label.setFont(font)
        self.lines_left_Label.setObjectName("lines_left_Label")
        self.total_lines_label_2 = QtWidgets.QLabel(self.centralwidget)
        self.total_lines_label_2.setGeometry(QtCore.QRect(550, 280, 141, 21))
        font = QtGui.QFont()
        font.setFamily("HACKED")
        font.setPointSize(13)
        font.setBold(False)
        self.total_lines_label_2.setFont(font)
        self.total_lines_label_2.setObjectName("total_lines_label_2")
        self.directoryResultsTextBox = QtWidgets.QTextEdit(self.centralwidget)
        self.directoryResultsTextBox.setGeometry(QtCore.QRect(120, 0, 241, 31))
        font = QtGui.QFont()
        font.setBold(False)
        self.directoryResultsTextBox.setFont(font)
        self.directoryResultsTextBox.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.directoryResultsTextBox.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.directoryResultsTextBox.setLineWidth(3)
        self.directoryResultsTextBox.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.directoryResultsTextBox.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.directoryResultsTextBox.setAutoFormatting(QtWidgets.QTextEdit.AutoAll)
        self.directoryResultsTextBox.setTabChangesFocus(True)
        self.directoryResultsTextBox.setLineWrapMode(QtWidgets.QTextEdit.NoWrap)
        self.directoryResultsTextBox.setLineWrapColumnOrWidth(0)
        self.directoryResultsTextBox.setObjectName("directoryResultsTextBox")
        self.threads_text_label = QtWidgets.QLabel(self.centralwidget)
        self.threads_text_label.setGeometry(QtCore.QRect(900, 0, 49, 16))
        self.threads_text_label.setObjectName("threads_text_label")
        self.showDomainStatsButton = QtWidgets.QPushButton(self.centralwidget)
        self.showDomainStatsButton.setGeometry(QtCore.QRect(550, 130, 80, 24))
        self.showDomainStatsButton.setObjectName("showDomainStatsButton")
        self.total_lines_label_3 = QtWidgets.QLabel(self.centralwidget)
        self.total_lines_label_3.setGeometry(QtCore.QRect(550, 320, 111, 21))
        font = QtGui.QFont()
        font.setFamily("HACKED")
        font.setPointSize(13)
        font.setBold(False)
        self.total_lines_label_3.setFont(font)
        self.total_lines_label_3.setObjectName("total_lines_label_3")
        self.version_label_text = QtWidgets.QLabel(self.centralwidget)
        self.version_label_text.setGeometry(QtCore.QRect(880, 680, 91, 31))
        self.version_label_text.setObjectName("version_label_text")
        self.input_text = QtWidgets.QTextBrowser(self.centralwidget)
        self.input_text.setGeometry(QtCore.QRect(10, 80, 241, 311))
        self.input_text.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByKeyboard|QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextBrowserInteraction|QtCore.Qt.TextEditable|QtCore.Qt.TextEditorInteraction|QtCore.Qt.TextSelectableByKeyboard|QtCore.Qt.TextSelectableByMouse)
        self.input_text.setObjectName("input_text")
        self.clear_tabs_button = QtWidgets.QPushButton(self.centralwidget)
        self.clear_tabs_button.setGeometry(QtCore.QRect(550, 100, 80, 24))
        self.clear_tabs_button.setObjectName("clear_tabs_button")
        DiamondSorter.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(DiamondSorter)
        self.statusbar.setObjectName("statusbar")
        DiamondSorter.setStatusBar(self.statusbar)
        self.menubar = QtWidgets.QMenuBar(DiamondSorter)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 980, 21))
        self.menubar.setObjectName("menubar")
        self.menuDiamond_Sorter = QtWidgets.QMenu(self.menubar)
        self.menuDiamond_Sorter.setObjectName("menuDiamond_Sorter")
        self.menuConsole_Screen = QtWidgets.QMenu(self.menubar)
        self.menuConsole_Screen.setObjectName("menuConsole_Screen")
        self.menuSettings = QtWidgets.QMenu(self.menubar)
        self.menuSettings.setObjectName("menuSettings")
        self.menuAbout = QtWidgets.QMenu(self.menubar)
        self.menuAbout.setToolTip("")
        self.menuAbout.setObjectName("menuAbout")
        self.menuBrowser = QtWidgets.QMenu(self.menubar)
        self.menuBrowser.setObjectName("menuBrowser")
        DiamondSorter.setMenuBar(self.menubar)
        self.ExtensionsBarQDockWidget = QtWidgets.QDockWidget(DiamondSorter)
        self.ExtensionsBarQDockWidget.setMinimumSize(QtCore.QSize(58, 50))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(35, 38, 41))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(35, 38, 41))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(35, 38, 41))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(35, 38, 41))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(35, 38, 41))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(35, 38, 41))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(35, 38, 41))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(35, 38, 41))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(35, 38, 41))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        self.ExtensionsBarQDockWidget.setPalette(palette)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icons/diamond.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.ExtensionsBarQDockWidget.setWindowIcon(icon)
        self.ExtensionsBarQDockWidget.setFeatures(QtWidgets.QDockWidget.DockWidgetFloatable|QtWidgets.QDockWidget.DockWidgetMovable)
        self.ExtensionsBarQDockWidget.setObjectName("ExtensionsBarQDockWidget")
        self.widget_container = QtWidgets.QWidget()
        self.widget_container.setObjectName("widget_container")
        self.widget_button_cookies = QtWidgets.QPushButton(self.widget_container)
        self.widget_button_cookies.setEnabled(True)
        self.widget_button_cookies.setGeometry(QtCore.QRect(20, 0, 111, 21))
        self.widget_button_cookies.setObjectName("widget_button_cookies")
        self.widget_button_url_tools = QtWidgets.QPushButton(self.widget_container)
        self.widget_button_url_tools.setEnabled(True)
        self.widget_button_url_tools.setGeometry(QtCore.QRect(340, 0, 111, 21))
        self.widget_button_url_tools.setCheckable(False)
        self.widget_button_url_tools.setObjectName("widget_button_url_tools")
        self.widget_button_requests = QtWidgets.QPushButton(self.widget_container)
        self.widget_button_requests.setEnabled(True)
        self.widget_button_requests.setGeometry(QtCore.QRect(500, 0, 101, 24))
        self.widget_button_requests.setObjectName("widget_button_requests")
        self.widget_button_chat = QtWidgets.QPushButton(self.widget_container)
        self.widget_button_chat.setEnabled(True)
        self.widget_button_chat.setGeometry(QtCore.QRect(860, 0, 81, 24))
        self.widget_button_chat.setObjectName("widget_button_chat")
        self.widget_button_configs = QtWidgets.QPushButton(self.widget_container)
        self.widget_button_configs.setEnabled(True)
        self.widget_button_configs.setGeometry(QtCore.QRect(180, 0, 111, 21))
        self.widget_button_configs.setObjectName("widget_button_configs")
        self.widget_button_loghunter = QtWidgets.QPushButton(self.widget_container)
        self.widget_button_loghunter.setEnabled(True)
        self.widget_button_loghunter.setGeometry(QtCore.QRect(670, 0, 81, 24))
        self.widget_button_loghunter.setObjectName("widget_button_loghunter")
        self.ExtensionsBarQDockWidget.setWidget(self.widget_container)
        DiamondSorter.addDockWidget(QtCore.Qt.DockWidgetArea(4), self.ExtensionsBarQDockWidget)
        self.actionaboutButton = QtWidgets.QAction(DiamondSorter)
        self.actionaboutButton.setMenuRole(QtWidgets.QAction.AboutRole)
        self.actionaboutButton.setObjectName("actionaboutButton")
        self.windows_menu_actionDiamondPad = QtWidgets.QAction(DiamondSorter)
        self.windows_menu_actionDiamondPad.setObjectName("windows_menu_actionDiamondPad")
        self.window_menu_actionPrefrences = QtWidgets.QAction(DiamondSorter)
        self.window_menu_actionPrefrences.setObjectName("window_menu_actionPrefrences")
        self.window_menu_actionRegex = QtWidgets.QAction(DiamondSorter)
        self.window_menu_actionRegex.setObjectName("window_menu_actionRegex")
        self.actionRegex_Cheat_Sheet = QtWidgets.QAction(DiamondSorter)
        self.actionRegex_Cheat_Sheet.setObjectName("actionRegex_Cheat_Sheet")
        self.actionHints_Tricks = QtWidgets.QAction(DiamondSorter)
        self.actionHints_Tricks.setObjectName("actionHints_Tricks")
        self.actionDataParsing = QtWidgets.QAction(DiamondSorter)
        self.actionDataParsing.setObjectName("actionDataParsing")
        self.actionDisplay_Console = QtWidgets.QAction(DiamondSorter)
        self.actionDisplay_Console.setObjectName("actionDisplay_Console")
        self.actionDisplay_HTTP_Client = QtWidgets.QAction(DiamondSorter)
        self.actionDisplay_HTTP_Client.setObjectName("actionDisplay_HTTP_Client")
        self.actionEnable_Everything = QtWidgets.QAction(DiamondSorter)
        self.actionEnable_Everything.setObjectName("actionEnable_Everything")
        self.actionLaunch_Browser = QtWidgets.QAction(DiamondSorter)
        self.actionLaunch_Browser.setIcon(icon)
        self.actionLaunch_Browser.setVisible(True)
        self.actionLaunch_Browser.setObjectName("actionLaunch_Browser")
        self.actionUndetected_Chrome = QtWidgets.QAction(DiamondSorter)
        self.actionUndetected_Chrome.setObjectName("actionUndetected_Chrome")
        self.actionShow_Widget_Functions = QtWidgets.QAction(DiamondSorter)
        self.actionShow_Widget_Functions.setObjectName("actionShow_Widget_Functions")
        self.actionInsomnia_HTTP_Client = QtWidgets.QAction(DiamondSorter)
        self.actionInsomnia_HTTP_Client.setObjectName("actionInsomnia_HTTP_Client")
        self.actionloadDirectory = QtWidgets.QAction(DiamondSorter)
        icon = QtGui.QIcon.fromTheme("accessories-text-editor")
        self.actionloadDirectory.setIcon(icon)
        self.actionloadDirectory.setMenuRole(QtWidgets.QAction.ApplicationSpecificRole)
        self.actionloadDirectory.setObjectName("actionloadDirectory")
        self.menuDiamond_Sorter.addAction(self.windows_menu_actionDiamondPad)
        self.menuDiamond_Sorter.addAction(self.window_menu_actionPrefrences)
        self.menuDiamond_Sorter.addAction(self.window_menu_actionRegex)
        self.menuDiamond_Sorter.addSeparator()
        self.menuDiamond_Sorter.addAction(self.actionShow_Widget_Functions)
        self.menuConsole_Screen.addAction(self.actionDisplay_Console)
        self.menuConsole_Screen.addSeparator()
        self.menuConsole_Screen.addAction(self.actionEnable_Everything)
        self.menuConsole_Screen.addSeparator()
        self.menuSettings.addAction(self.actionRegex_Cheat_Sheet)
        self.menuSettings.addAction(self.actionHints_Tricks)
        self.menuSettings.addAction(self.actionDataParsing)
        self.menuBrowser.addAction(self.actionLaunch_Browser)
        self.menuBrowser.addAction(self.actionUndetected_Chrome)
        self.menuBrowser.addSeparator()
        self.menuBrowser.addAction(self.actionInsomnia_HTTP_Client)
        self.menubar.addAction(self.menuDiamond_Sorter.menuAction())
        self.menubar.addAction(self.menuConsole_Screen.menuAction())
        self.menubar.addAction(self.menuBrowser.menuAction())
        self.menubar.addAction(self.menuSettings.menuAction())
        self.menubar.addAction(self.menuAbout.menuAction())
        self.directory_path_label_main_2.setBuddy(self.savedResultsTextBox)

        self.retranslateUi(DiamondSorter)
        self.tab_widget.setCurrentIndex(0)
        self.stealer_log_format_combo.setCurrentIndex(0)
        self.resultswidgets.setCurrentIndex(0)
        self.stealer_log_format_combo.currentIndexChanged['int'].connect(self.redline_file_structure_text_browser.show) # type: ignore
        self.widget_button_cookies.clicked.connect(self.widget_button_configs.setFocus) # type: ignore
        self.console_widget_textedit.windowIconChanged['QIcon'].connect(self.console_widget_textedit.update) # type: ignore
        self.emailPasswordButton.clicked.connect(self.directory_path_label_main_2.deleteLater) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(DiamondSorter)

    def retranslateUi(self, DiamondSorter):
        _translate = QtCore.QCoreApplication.translate
        DiamondSorter.setWindowTitle(_translate("DiamondSorter", "DiamondSorter"))
        self.tab_widget.setToolTip(_translate("DiamondSorter", "This will be your basic format options for all functions in \n"
" this window. Your values that you set in place here will be \n"
" how the script performs and operates."))
        self.tab_widget.setWhatsThis(_translate("DiamondSorter", "Find out more"))
        self.deleate_after_sorting_checkbox.setText(_translate("DiamondSorter", "Deleate Files After Sorting?"))
        self.file_type_or_format_for_the_search_label.setToolTip(_translate("DiamondSorter", "<html><head/><body><p>Specify the file format or file name / pattern you would like to search.<br/><br/>Examples:<br/>New Text Document.txt<br/>*Document.txt<br/>*.txt</p></body></html>"))
        self.file_type_or_format_for_the_search_label.setPlaceholderText(_translate("DiamondSorter", "Leave blank to search all files"))
        self.stealer_log_format_label.setText(_translate("DiamondSorter", "Stealer Log Capture Format"))
        self.file_type_or_format_label.setText(_translate("DiamondSorter", "File Type or Format for the Search"))
        self.stealer_log_format_combo.setToolTip(_translate("DiamondSorter", "Set the file structure of your logs."))
        self.stealer_log_format_combo.setItemText(1, _translate("DiamondSorter", "Redline / Meta"))
        self.stealer_log_format_combo.setItemText(2, _translate("DiamondSorter", "Racoon"))
        self.stealer_log_format_combo.setItemText(3, _translate("DiamondSorter", "Titan Stealer"))
        self.stealer_log_format_combo.setItemText(4, _translate("DiamondSorter", "White Snake"))
        self.stealer_log_format_combo.setItemText(5, _translate("DiamondSorter", "Worldwind / Prynt"))
        self.file_structure_frame.setToolTip(_translate("DiamondSorter", "This is the file structure that will help you achive\n"
"a more specific and accurate result from\n"
"sorting through stealer logs when file sorting"))
        self.label.setText(_translate("DiamondSorter", "File Structure:"))
        self.redline_file_structure_text_browser.setToolTip(_translate("DiamondSorter", "This is the file structure that will help you achive\n"
"a more specific and accurate result from\n"
"sorting through stealer logs when file sorting"))
        self.redline_file_structure_text_browser.setHtml(_translate("DiamondSorter", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"hr { height: 1px; border-width: 0; }\n"
"li.unchecked::marker { content: \"\\2610\"; }\n"
"li.checked::marker { content: \"\\2612\"; }\n"
"</style></head><body style=\" font-family:\'Segoe UI\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📁 Autofills</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Google_[Chrome]_Default.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Microsoft_[Edge]_Default.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📁 Cookies</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Firefox_c09zp0gb.default-release.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Google_[Chrome]_Default Network.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Microsoft_[Edge]_Default Network.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📄 DomainDetects.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📄 ImportantAutofills.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📄 InstalledBrowsers.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📄 InstalledSoftware.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📄 Passwords.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📄 ProcessList.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📁 Restore</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Google_[Chrome]_Default Fresh Cookies.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Google_[Chrome]_Default Token.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Microsoft_[Edge]_Default Token.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📄 Screenshot.jpg</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📁 UserAgents</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Google_[Chrome].txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Microsoft_[Edge].txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📄 UserInformation.txt</p></body></html>"))
        self.racoon_file_structure_text_browser.setHtml(_translate("DiamondSorter", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"hr { height: 1px; border-width: 0; }\n"
"li.unchecked::marker { content: \"\\2610\"; }\n"
"li.checked::marker { content: \"\\2612\"; }\n"
"</style></head><body style=\" font-family:\'Segoe UI\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📁 Autofill</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Google Chrome_Profile.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Google Chrome_Profile.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📁 Cookies</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Google Chrome_Profile.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Google Chrome_Profile.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Microsoft Edge_Default.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📄 domain detect.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📁 Downloads</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Google Chrome_Profile.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📁 Files</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Default.zip</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📁 History</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Google Chrome_Profile.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Google Chrome_Profile.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📄 information.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📄 passwords.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📄 screenshot.jpg</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📁 Soft</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📁 Steam</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">    📄 config.vdf</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">    📄 loginusers.vdf</p></body></html>"))
        self.titan_file_structure_text_browser.setHtml(_translate("DiamondSorter", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"hr { height: 1px; border-width: 0; }\n"
"li.unchecked::marker { content: \"\\2610\"; }\n"
"li.checked::marker { content: \"\\2612\"; }\n"
"</style></head><body style=\" font-family:\'Segoe UI\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📁 Autofills</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Google_[Chrome]_Default.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Microsoft_[Edge]_Default.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📁 Cookies</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Firefox_c09zp0gb.default-release.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Google_[Chrome]_Default Network.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Microsoft_[Edge]_Default Network.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📄 DomainDetects.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📄 ImportantAutofills.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📄 InstalledBrowsers.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📄 InstalledSoftware.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📄 Passwords.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📄 ProcessList.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📁 Restore</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Google_[Chrome]_Default Fresh Cookies.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Google_[Chrome]_Default Token.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Microsoft_[Edge]_Default Token.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📄 Screenshot.jpg</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📁 UserAgents</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Google_[Chrome].txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Microsoft_[Edge].txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📄 UserInformation.txt</p></body></html>"))
        self.worldwind_file_structure_text_browser.setHtml(_translate("DiamondSorter", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"hr { height: 1px; border-width: 0; }\n"
"li.unchecked::marker { content: \"\\2610\"; }\n"
"li.checked::marker { content: \"\\2612\"; }\n"
"</style></head><body style=\" font-family:\'Segoe UI\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📁 Browsers</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">    📁 BraveSoftware</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">      📄 AutoFill.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">      📄 Bookmarks.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">      📄 History.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">      📄 Passwords.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">   📁 Edge</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">      📄 AutoFill.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">      📄 Bookmarks.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">      📄 History.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">      📄 Passwords.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">   📁 Google</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">      📄 AutoFill.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">      📄 Bookmarks.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">      📄 Downloads.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">      📄 Passwords.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📁 Directories</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Desktop.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Documents.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Downloads.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 OneDrive.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Pictures.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Startup.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Temp.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Videos.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📁 Gaming</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">    📁 Minecraft</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">      📄 launcher_profiles.json</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">    📁 Steam</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">      📄 Apps.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📁 Grabber</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📁 DRIVE-C<br />            📁 Desktop</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">            📁 Documents</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">            📁 Pictures</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">            📁 Camera Roll</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">                 📄</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">                 📄</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">            📁 Saved Pictures</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">            📁 Screenshots</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📁 Messenger</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📁 Discord</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">    📁 leveldb</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">      📄 000075.ldb</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">      📄 000077.log</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">      📄 000078.ldb</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">      📄 CURRENT</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">      📄 LOCK</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">      📄 LOG</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">      📄 LOG.old</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">      📄 MANIFEST-000001</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📁 Telegram</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">    📁 D877F783D5D3EF8C</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">      📄 24AF661708B83EDCs</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">      📄 3ABD80B4D779F270s</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">      📄 43E576770DA194D4s</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">      📄 D877F783D5D3EF8Cs</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">      📄 key_datas</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">      📄 settingss</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">      📄 usertag</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📁 System</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Process.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 ProductKey.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 SavedNetworks.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 ScanningNetworks.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Windows.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 WorldWind.jpg</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.whitesnake_file_structure_text_browser.setHtml(_translate("DiamondSorter", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"hr { height: 1px; border-width: 0; }\n"
"li.unchecked::marker { content: \"\\2610\"; }\n"
"li.checked::marker { content: \"\\2612\"; }\n"
"</style></head><body style=\" font-family:\'Segoe UI\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📁 Autofills</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Google_[Chrome]_Default.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Microsoft_[Edge]_Default.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📁 Cookies</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Firefox_c09zp0gb.default-release.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Google_[Chrome]_Default Network.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Microsoft_[Edge]_Default Network.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📄 DomainDetects.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📄 ImportantAutofills.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📄 InstalledBrowsers.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📄 InstalledSoftware.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📄 Passwords.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📄 ProcessList.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📁 Restore</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Google_[Chrome]_Default Fresh Cookies.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Google_[Chrome]_Default Token.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Microsoft_[Edge]_Default Token.txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📄 Screenshot.jpg</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📁 UserAgents</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Google_[Chrome].txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  📄 Microsoft_[Edge].txt</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">📄 UserInformation.txt</p></body></html>"))
        self.domain_managerButton.setText(_translate("DiamondSorter", "Domain Manager"))
        self.file_tree_structure_button.setToolTip(_translate("DiamondSorter", "Display the File Tree structure of the selected\n"
"file directory path "))
        self.file_tree_structure_button.setText(_translate("DiamondSorter", "Display Your Selected File Structure"))
        self.tab_widget.setTabText(self.tab_widget.indexOf(self.formatOptionsTab), _translate("DiamondSorter", "❗Format Options"))
        self.pasteButton.setToolTip(_translate("DiamondSorter", " Paste input from the clipboard."))
        self.pasteButton.setText(_translate("DiamondSorter", "Paste Input"))
        self.removeLinksButton.setText(_translate("DiamondSorter", "Remove Links"))
        self.copyButton_2.setText(_translate("DiamondSorter", "Copy Output"))
        self.removeEndingPunctuationButton.setToolTip(_translate("DiamondSorter", "Remove any puncuations at the END of EACH line"))
        self.removeEndingPunctuationButton.setText(_translate("DiamondSorter", "Remove Ending Punctuation"))
        self.remove_domainsButton.setToolTip(_translate("DiamondSorter", "Extract domain names from the text."))
        self.remove_domainsButton.setText(_translate("DiamondSorter", "- Domains"))
        self.removeDuplicatesButton.setText(_translate("DiamondSorter", "- Duplicates"))
        self.extract_md5Button.setToolTip(_translate("DiamondSorter", "Extract any MD5 Strings from your file captures or the input_text window"))
        self.extract_md5Button.setText(_translate("DiamondSorter", "Extract MD5"))
        self.removeSpecialCharacterButton.setToolTip(_translate("DiamondSorter", "Remove everything on that line after a character you specify"))
        self.removeSpecialCharacterButton.setText(_translate("DiamondSorter", "Remove after Special Character"))
        self.organizeLinesButton.setToolTip(_translate("DiamondSorter", "Orginize your Input Text from one of these options"))
        self.organizeLinesButton.setText(_translate("DiamondSorter", "Organize"))
        self.remove_trash_button.setToolTip(_translate("DiamondSorter", "6 Various Options to Enable/Disable when cleaning your strings"))
        self.remove_trash_button.setText(_translate("DiamondSorter", "Remove Trash"))
        self.remove_capturesButton.setToolTip(_translate("DiamondSorter", "Extract captured data  from the text."))
        self.remove_capturesButton.setText(_translate("DiamondSorter", "- Captures"))
        self.split_by_linesButton.setText(_translate("DiamondSorter", "Split By Lines"))
        self.removeAfterSpace.setToolTip(_translate("DiamondSorter", "Perform an action after a tab space in each line."))
        self.removeAfterSpace.setText(_translate("DiamondSorter", "Remove After Space"))
        self.removeAfter_Tab_Space.setToolTip(_translate("DiamondSorter", "Remove after a \"Tab\" space"))
        self.removeAfter_Tab_Space.setText(_translate("DiamondSorter", "- After Tab Space"))
        self.remove_inbetween_two_variablesButton.setToolTip(_translate("DiamondSorter", "Chose two different variables such as   \"  (  \"   and  \"  )  \"\n"
"This will remove any data between ( these two things )"))
        self.remove_inbetween_two_variablesButton.setText(_translate("DiamondSorter", "Remove Inbetween Variables"))
        self.sort_remove_similarButton.setToolTip(_translate("DiamondSorter", "Removes simalar combo strings ( based of a consecutive variable of 5 characters )"))
        self.sort_remove_similarButton.setText(_translate("DiamondSorter", "Remove Similar"))
        self.replace_linesButton.setText(_translate("DiamondSorter", "Replace Lines"))
        self.extract_ip_addressButton.setToolTip(_translate("DiamondSorter", "Extract any IP Information from your Input Text or your Directory Path"))
        self.extract_ip_addressButton.setText(_translate("DiamondSorter", "Extract IP"))
        self.extract_phone_numberButton.setToolTip(_translate("DiamondSorter", "Extract any phone numbers from your input_text window or file captures."))
        self.extract_phone_numberButton.setText(_translate("DiamondSorter", "Extract Phn Num"))
        self.format_request_textedit.setPlaceholderText(_translate("DiamondSorter", "Format Request From Variables Above Progress Bar"))
        self.remove_new_lines.setText(_translate("DiamondSorter", "Remove All New Lines"))
        self.consecutive_digits_button.setToolTip(_translate("DiamondSorter", "Remove any data that have the same consuctive numbers that you specify."))
        self.consecutive_digits_button.setText(_translate("DiamondSorter", "Consecutive Digits"))
        self.remove_after_button.setToolTip(_translate("DiamondSorter", "Perform an action after a tab space in each line."))
        self.remove_after_button.setText(_translate("DiamondSorter", "Remove After"))
        self.remove_after_button_2.setToolTip(_translate("DiamondSorter", "Perform an action after a tab space in each line."))
        self.remove_after_button_2.setText(_translate("DiamondSorter", "Remove Before"))
        self.tab_widget.setTabText(self.tab_widget.indexOf(self.generalComboOptionsTab), _translate("DiamondSorter", "❗General Combo Options"))
        self.emailPasswordButton.setToolTip(_translate("DiamondSorter", "Create a Email:Password combination from from the specified Directory Path that you have\n"
"selected at the top of this interface."))
        self.emailPasswordButton.setText(_translate("DiamondSorter", "Email:Password"))
        self.usernamePasswordButton.setText(_translate("DiamondSorter", "Username:Password"))
        self.memberIDPINButton.setText(_translate("DiamondSorter", "Member ID:PIN"))
        self.numberPasswordButton.setToolTip(_translate("DiamondSorter", "Number:Pass"))
        self.numberPasswordButton.setWhatsThis(_translate("DiamondSorter", "Number:pass"))
        self.numberPasswordButton.setText(_translate("DiamondSorter", "Number:Password"))
        self.wordpress_finder_button.setToolTip(_translate("DiamondSorter", "Wordpress........ It finds it...."))
        self.wordpress_finder_button.setText(_translate("DiamondSorter", "Wordpress Finder"))
        self.business_emailfinder_button.setToolTip(_translate("DiamondSorter", "Will grab any CUSTOM domains and passwords to create a SMTP combo list"))
        self.business_emailfinder_button.setText(_translate("DiamondSorter", "Business Emails"))
        self.governmentDomainsButton.setToolTip(_translate("DiamondSorter", "Grab any URL:USER:PASS or any USER:PASS combinations that are .gov related."))
        self.governmentDomainsButton.setText(_translate("DiamondSorter", "Gov Domains"))
        self.server_information_button.setToolTip(_translate("DiamondSorter", "This will grab any \"Sever Related Information\"\n"
"Such as FTP Data, Webhosting Data, RDP/VPN Information\n"
"From all text files in your File Directory Path."))
        self.server_information_button.setText(_translate("DiamondSorter", "Server Information"))
        self.cpanel_account_button.setToolTip(_translate("DiamondSorter", "This will scrape all of your Passwords.txt Files from your Directory Path that\n"
"is in direct relation of any of the following url keywords\n"
":2083 :2087, :8442, cpanel, whm\n"
"webmail, roundcube, or wp-login"))
        self.cpanel_account_button.setText(_translate("DiamondSorter", "Cpanel Accounts"))
        self.mailBoxesOptions_ComboButton.setToolTip(_translate("DiamondSorter", "Emails"))
        self.mailBoxesOptions_ComboButton.setWhatsThis(_translate("DiamondSorter", "<html><head/><body><p>Sort by mails</p></body></html>"))
        self.mailBoxesOptions_ComboButton.setText(_translate("DiamondSorter", "✅"))
        self.advertisingButton.setToolTip(_translate("DiamondSorter", "This will scrape any \"Ads\" related content in any text files, including accounts\n"
"URL Captures, API Keys or Backup Keys"))
        self.advertisingButton.setText(_translate("DiamondSorter", "Advertisements"))
        self.socialForumsButton.setToolTip(_translate("DiamondSorter", "Grab any Social media related data."))
        self.socialForumsButton.setText(_translate("DiamondSorter", "Socials && Forums"))
        self.mailbox_options_combo.setToolTip(_translate("DiamondSorter", "Country Email Domains you would like to scrape from your Directory Path"))
        self.mailbox_options_combo.setWhatsThis(_translate("DiamondSorter", "<html><head/><body><p>Sort by mails</p></body></html>"))
        self.mailbox_options_combo.setItemText(0, _translate("DiamondSorter", "United States"))
        self.mailbox_options_combo.setItemText(1, _translate("DiamondSorter", "Canada"))
        self.mailbox_options_combo.setItemText(2, _translate("DiamondSorter", "Business Emails"))
        self.password_working_function_combo.setToolTip(_translate("DiamondSorter", "This is your workmode function\n"
"If you choose the input_text then you will\n"
"be working from inside the text widget\n"
"If you choose File Path, Then be sure to enter\n"
" A file directory at the top of the screen."))
        self.password_working_function_combo.setItemText(1, _translate("DiamondSorter", "Work from Specified Directory"))
        self.password_working_function_combo.setItemText(2, _translate("DiamondSorter", "Work from Input Requests"))
        self.frame_2.setWhatsThis(_translate("DiamondSorter", "These will be the variable inputs you can use\n"
"beside the <b>Desired Format</b> text input. This will\n"
"be saved in the path you have noted in the \n"
" <b>Saved Results</b> text input"))
        self.variables_label_2.setText(_translate("DiamondSorter", "Variables"))
        self.url_variable_label_2.setText(_translate("DiamondSorter", "URL: {URL}"))
        self.label_9.setText(_translate("DiamondSorter", "Username: {USER}"))
        self.label_20.setText(_translate("DiamondSorter", "Password: {PASS}"))
        self.label_21.setText(_translate("DiamondSorter", "Email: {EMAIL}"))
        self.label_22.setText(_translate("DiamondSorter", "IP Address: {IP}"))
        self.creditcard_variable_label_2.setText(_translate("DiamondSorter", "Credit Card: {CC}"))
        self.label_23.setText(_translate("DiamondSorter", "CVC: {CVC}"))
        self.label_24.setText(_translate("DiamondSorter", "AN/RN: {ANRN}"))
        self.label_25.setText(_translate("DiamondSorter", "Personal: {FULLZ}"))
        self.label_26.setText(_translate("DiamondSorter", "Phone List: {PHN}"))
        self.label_27.setText(_translate("DiamondSorter", "Location: {GEO}"))
        self.create_username_list_button.setToolTip(_translate("DiamondSorter", "This will take your File Directory Path and scrape all of the EMAILS and USERNAMES and\n"
" Create a Username.txt list for bruteforce spamming"))
        self.create_username_list_button.setText(_translate("DiamondSorter", "Create Username List"))
        self.create_password_list.setText(_translate("DiamondSorter", "Create Password List"))
        self.create_number_list.setText(_translate("DiamondSorter", "Create Number List"))
        self.copyButton.setToolTip(_translate("DiamondSorter", "Copy your Output_text"))
        self.copyButton.setText(_translate("DiamondSorter", "Copy Output"))
        self.tab2_pasteButton.setToolTip(_translate("DiamondSorter", "Paste your Clipboard in the Input_text"))
        self.tab2_pasteButton.setText(_translate("DiamondSorter", "Paste Input"))
        self.tab_widget.setTabText(self.tab_widget.indexOf(self.password_format_tab), _translate("DiamondSorter", "🔑 Password Log Formats"))
        self.sort_by_cap_dateButton.setText(_translate("DiamondSorter", "Sort by Capture Date"))
        self.sort_password_by_weightButton.setText(_translate("DiamondSorter", "Password Weight"))
        self.remove_duplicatesButton.setText(_translate("DiamondSorter", "Remove Duplicates"))
        self.sort_by_file_capturesButton.setText(_translate("DiamondSorter", "File Captures"))
        self.sort_stealer_typeButton.setText(_translate("DiamondSorter", "Sort by Stealer Type"))
        self.sort_by_geoButton.setText(_translate("DiamondSorter", "Sort by Geo Data"))
        self.remove_skinnyButton.setText(_translate("DiamondSorter", "Remove Skinny Logs"))
        self.sort_tg_groupButton.setText(_translate("DiamondSorter", "TG Group"))
        self.sort_by_ads_logsButton.setText(_translate("DiamondSorter", "Advertisment Logs"))
        self.sort_by_business_capturesButton.setText(_translate("DiamondSorter", "Business Captures"))
        self.create_a_file_tree_sortinglogsButton.setText(_translate("DiamondSorter", "Create a File Tree"))
        self.sort_email_domainsButton.setText(_translate("DiamondSorter", "Sort Email Domains"))
        self.variable_text_edit_path.setPlaceholderText(_translate("DiamondSorter", "{URL} | {USER} | {PASS}"))
        self.extractBySearchButton.setText(_translate("DiamondSorter", "Extract Search Requests"))
        self.sort_passwords_textButton.setText(_translate("DiamondSorter", "Passwords.txt"))
        self.get_log_stats_button.setText(_translate("DiamondSorter", "Get Log Stats"))
        self.seperator_value_text_edit.setPlaceholderText(_translate("DiamondSorter", "Seperator: |"))
        self.sort_by_ads_logsButton_2.setText(_translate("DiamondSorter", "Mobile Logins"))
        self.tab_widget.setTabText(self.tab_widget.indexOf(self.sortingLogsTab), _translate("DiamondSorter", "📃 Sorting Logs"))
        self.telegram_folder_sorting_button.setText(_translate("DiamondSorter", "Telegram Folders"))
        self.authy_desktop_button.setText(_translate("DiamondSorter", "Authy Desktop"))
        self.chrome_extensions_button.setText(_translate("DiamondSorter", "Chrome Extensions"))
        self.desktop_wallet_button.setText(_translate("DiamondSorter", "Desktop Wallets"))
        self.browser_wallet_sort_button.setText(_translate("DiamondSorter", "Browser Wallets"))
        self.browser_2fa_extension_button.setText(_translate("DiamondSorter", "Browser 2FA Exten"))
        self.newtextdocuments_button.setText(_translate("DiamondSorter", "New Text Documents"))
        self.text_named_sorting_button.setText(_translate("DiamondSorter", "Text Named Files"))
        self.pgp_button.setText(_translate("DiamondSorter", "PGP & GPG Keys"))
        self.encryption_keys_button.setText(_translate("DiamondSorter", "Encryption Keys"))
        self.auth_files_button.setText(_translate("DiamondSorter", "Auth Files"))
        self.sort_by_cookies_button.setText(_translate("DiamondSorter", "Sort by Cookies"))
        self.remote_desktop_button.setText(_translate("DiamondSorter", "Remote Desktops"))
        self.discord_sorting_button.setText(_translate("DiamondSorter", "Discord Files"))
        self.control_panels_sort_button.setText(_translate("DiamondSorter", "Control Panels"))
        self.button_scrape_keys.setText(_translate("DiamondSorter", "Scrape Keys"))
        self.button_scrape_banking_data.setText(_translate("DiamondSorter", "Scrape Banking Data"))
        self.button_scrape_backup_codes.setText(_translate("DiamondSorter", "Scrape Backup Codes"))
        self.button_scrape_security_data.setText(_translate("DiamondSorter", "Scrape Security Data"))
        self.pushButton_14.setText(_translate("DiamondSorter", "Get File Stats"))
        self.tab_widget.setTabText(self.tab_widget.indexOf(self.sortingFilesTab), _translate("DiamondSorter", "📃 Sorting Files"))
        self.sorting_cookies_sort_by_domain.setText(_translate("DiamondSorter", "Sort By Domain"))
        self.sorting_cookies_sort_by_quantity.setText(_translate("DiamondSorter", "Sort by Quantity"))
        self.sorting_cookies_sort_by_values_button.setText(_translate("DiamondSorter", "Sort by Values"))
        self.sorting_cookies_keywords_button.setText(_translate("DiamondSorter", "Keywords"))
        self.sorting_cookies_netscape_to_json_button.setText(_translate("DiamondSorter", "Netscape > Json"))
        self.sorting_cookies_json_to_netscape_button.setText(_translate("DiamondSorter", "JSON > Netscape"))
        self.sorting_cookies_save_password_checkbox.setText(_translate("DiamondSorter", "Save with Passwords"))
        self.sorting_cookies_save_login_cookie_capture_checkbox.setText(_translate("DiamondSorter", "Saved Login Cookie Capture"))
        self.sorting_cookies_save_autofill_data_button.setText(_translate("DiamondSorter", "Save with Autofill Data"))
        self.sorting_cookies_fix_cookie_misprintButton.setText(_translate("DiamondSorter", "Fix Cookie Misprint"))
        self.sorting_cookies_count_total_values.setText(_translate("DiamondSorter", "Count Total Values"))
        self.get_file_stats_button.setText(_translate("DiamondSorter", "Get Stats"))
        self.tab_widget.setTabText(self.tab_widget.indexOf(self.sortingCookiesTab), _translate("DiamondSorter", "🍪 Sorting Cookies"))
        self.capture_security_quest_answer_button.setText(_translate("DiamondSorter", "Capture Security Q and A"))
        self.capture_all_banking_logs_button.setText(_translate("DiamondSorter", "Capture All Banking Logs"))
        self.parse_fulls_button.setText(_translate("DiamondSorter", "Parse Fullz Data Out"))
        self.sort_cc_dataButton.setText(_translate("DiamondSorter", "Sort CC Data"))
        self.sort_cc_data_with_cvcButton.setText(_translate("DiamondSorter", "Sort CC Data with CVC"))
        self.sort_by_remitliesButton.setText(_translate("DiamondSorter", "Sort by Remitlies"))
        self.sort_by_remetliescookiesButton.setText(_translate("DiamondSorter", "Sort by Remitly Cookies"))
        self.search_inside_new_text_docs.setText(_translate("DiamondSorter", "Search Inside NewText"))
        self.capture_2fa_files_bypassButton.setText(_translate("DiamondSorter", "Capture 2FA Bypass"))
        self.banking_leads_emailButton.setText(_translate("DiamondSorter", "Banking Leads - Email"))
        self.banking_leads_phoneButton.setText(_translate("DiamondSorter", "Banking Leads - Phone"))
        self.scan_potental_phishersButton.setText(_translate("DiamondSorter", "Scan Potental Phishers"))
        self.tab_widget.setTabText(self.tab_widget.indexOf(self.bankingFeaturesTab), _translate("DiamondSorter", "🏦 Banking Features"))
        self.pushButton.setText(_translate("DiamondSorter", "PushButton"))
        self.pushButton_2.setText(_translate("DiamondSorter", "PushButton"))
        self.pushButton_3.setText(_translate("DiamondSorter", "PushButton"))
        self.pushButton_4.setText(_translate("DiamondSorter", "PushButton"))
        self.pushButton_5.setText(_translate("DiamondSorter", "PushButton"))
        self.pushButton_6.setText(_translate("DiamondSorter", "PushButton"))
        self.pushButton_7.setText(_translate("DiamondSorter", "PushButton"))
        self.pushButton_8.setText(_translate("DiamondSorter", "PushButton"))
        self.pushButton_9.setText(_translate("DiamondSorter", "PushButton"))
        self.pushButton_10.setText(_translate("DiamondSorter", "PushButton"))
        self.pushButton_11.setText(_translate("DiamondSorter", "PushButton"))
        self.pushButton_12.setText(_translate("DiamondSorter", "PushButton"))
        self.tab_widget.setTabText(self.tab_widget.indexOf(self.requestedOptionsTab), _translate("DiamondSorter", "Requested Options #1"))
        self.removeAfterSpace_2.setText(_translate("DiamondSorter", "Remove After Space"))
        self.tab_widget.setTabText(self.tab_widget.indexOf(self.requestedOptionsTab2), _translate("DiamondSorter", "Requested Options #2"))
        self.savedResultsTextBox.setPlaceholderText(_translate("DiamondSorter", "Pick your path to save the results"))
        self.thread_box.setToolTip(_translate("DiamondSorter", "The number of threads you would like the script to run on"))
        self.variable_frame.setToolTip(_translate("DiamondSorter", "These variables is what you will be using when requesting logs in a specific format."))
        self.variables_label.setText(_translate("DiamondSorter", " Variables"))
        self.url_variable_label.setText(_translate("DiamondSorter", "URL: {URL}"))
        self.variable_text_username.setText(_translate("DiamondSorter", "Username: {USER}"))
        self.variable_text_password.setText(_translate("DiamondSorter", "Password: {PASS}"))
        self.variable_text_email.setText(_translate("DiamondSorter", "Email: {EMAIL}"))
        self.variable_text_ip.setText(_translate("DiamondSorter", "IP Address: {IP}"))
        self.creditcard_variable_label.setText(_translate("DiamondSorter", "Credit Card: {CC}"))
        self.variable_text_cvc.setText(_translate("DiamondSorter", "CVC: {CVC}"))
        self.variable_text_anrn.setText(_translate("DiamondSorter", "AN/RN: {ANRN}"))
        self.variable_text_fullz.setText(_translate("DiamondSorter", "Personal: {FULLZ}"))
        self.variable_text_phone.setText(_translate("DiamondSorter", "Phone List: {PHN}"))
        self.directory_path_label_main.setText(_translate("DiamondSorter", "Directory Path:"))
        self.directory_path_label_main_2.setText(_translate("DiamondSorter", "Save Results:"))
        self.set_directory_path_button.setText(_translate("DiamondSorter", "Select Directory"))
        self.save_results_action_button.setText(_translate("DiamondSorter", "Select Directory"))
        self.enable_wordwrap_checkbox.setText(_translate("DiamondSorter", "Enable Word Wrap?"))
        self.output_text.setToolTip(_translate("DiamondSorter", "Mainly for combo uses - this will display the results of your actions when using combolists and data"))
        self.output_text.setPlaceholderText(_translate("DiamondSorter", "Output Lines"))
        self.resultswidgets.setTabText(self.resultswidgets.indexOf(self.tab), _translate("DiamondSorter", "Results Tab"))
        self.removed_data_text.setToolTip(_translate("DiamondSorter", "Mainly for combo uses - this will display the results of your actions when using combolists and data"))
        self.removed_data_text.setPlaceholderText(_translate("DiamondSorter", "Removed Data"))
        self.resultswidgets.setTabText(self.resultswidgets.indexOf(self.removed_data_tab), _translate("DiamondSorter", "Removed Data Tab"))
        self.console_widget_textedit.setPlaceholderText(_translate("DiamondSorter", "Console Display                                                                             File Structure: {Redline/Meta}                                                                            Directory Path: {Path}                                                              .                                                                                             Sorting Option Chosen: {Button Pressed}                                                   .                                                                                                  Functions Output                                           "))
        self.remove_empty_lines_checkbox.setText(_translate("DiamondSorter", "Remove Empty Lines?"))
        self.import_requests_button.setText(_translate("DiamondSorter", "Import Requests"))
        self.StealerLog_File_Structure_label.setText(_translate("DiamondSorter", "Stealer Log File Structure:"))
        self.file_directory_path_label.setText(_translate("DiamondSorter", "File Directory Path Chosen:"))
        self.total_lines_label.setText(_translate("DiamondSorter", "Input Lines"))
        self.lines_left_Label.setText(_translate("DiamondSorter", "Results Tab"))
        self.total_lines_label_2.setText(_translate("DiamondSorter", "Removed Data Tab"))
        self.directoryResultsTextBox.setPlaceholderText(_translate("DiamondSorter", "Set your path to work from"))
        self.threads_text_label.setText(_translate("DiamondSorter", "Threads"))
        self.showDomainStatsButton.setText(_translate("DiamondSorter", "Show Stats"))
        self.total_lines_label_3.setText(_translate("DiamondSorter", "Last Function:"))
        self.version_label_text.setText(_translate("DiamondSorter", "       V 1.8.0"))
        self.input_text.setPlaceholderText(_translate("DiamondSorter", "Input Requests  "))
        self.clear_tabs_button.setText(_translate("DiamondSorter", "Clear Tabs"))
        self.menuDiamond_Sorter.setTitle(_translate("DiamondSorter", "Diamond Sorter"))
        self.menuConsole_Screen.setTitle(_translate("DiamondSorter", "Console Screen"))
        self.menuSettings.setTitle(_translate("DiamondSorter", "Settings"))
        self.menuAbout.setTitle(_translate("DiamondSorter", "About"))
        self.menuBrowser.setTitle(_translate("DiamondSorter", "Browser"))
        self.ExtensionsBarQDockWidget.setWindowTitle(_translate("DiamondSorter", "Features"))
        self.widget_button_cookies.setToolTip(_translate("DiamondSorter", "Cookies Widget\n"
"This option will help you manage and inspect your cookie data and values."))
        self.widget_button_cookies.setText(_translate("DiamondSorter", "Cookies"))
        self.widget_button_url_tools.setToolTip(_translate("DiamondSorter", "URL Tool Widget\n"
"This widget will allow the user to inspect\n"
"and get the analytics of URL Domains\n"
"And can also help you chase down new leads or\n"
"New approachs to websites."))
        self.widget_button_url_tools.setText(_translate("DiamondSorter", "URL Tool"))
        self.widget_button_requests.setToolTip(_translate("DiamondSorter", "Request Widget - TBA"))
        self.widget_button_requests.setText(_translate("DiamondSorter", "Request"))
        self.widget_button_chat.setToolTip(_translate("DiamondSorter", "About Widget\n"
"This widget will take you the \"Credits\" portion of the softwareThis is where you can find more indepth explinations\n"
"of all the functions and features that is included in this software"))
        self.widget_button_chat.setText(_translate("DiamondSorter", "Chat"))
        self.widget_button_configs.setToolTip(_translate("DiamondSorter", "Configs Widget\n"
"This widget will give you several various functions\n"
"that will help you generate and create a number\n"
"of various checkers such as Cookie Bullet, BL Tools\n"
"Silverbullet, Openbullet, Python and more."))
        self.widget_button_configs.setText(_translate("DiamondSorter", "CFGs"))
        self.widget_button_loghunter.setToolTip(_translate("DiamondSorter", "About Widget\n"
"This widget will take you the \"Credits\" portion of the softwareThis is where you can find more indepth explinations\n"
"of all the functions and features that is included in this software"))
        self.widget_button_loghunter.setText(_translate("DiamondSorter", "Log Hunter"))
        self.actionaboutButton.setText(_translate("DiamondSorter", "aboutButton"))
        self.windows_menu_actionDiamondPad.setText(_translate("DiamondSorter", "Diamond Pad"))
        self.window_menu_actionPrefrences.setText(_translate("DiamondSorter", "Regex Creator"))
        self.window_menu_actionRegex.setText(_translate("DiamondSorter", "Expression Veiwer"))
        self.actionRegex_Cheat_Sheet.setText(_translate("DiamondSorter", "Regex Cheat Sheet"))
        self.actionHints_Tricks.setText(_translate("DiamondSorter", "Hints & Tricks"))
        self.actionDataParsing.setText(_translate("DiamondSorter", "DataParsing"))
        self.actionDisplay_Console.setText(_translate("DiamondSorter", "Display Console"))
        self.actionDisplay_HTTP_Client.setText(_translate("DiamondSorter", "Display HTTP Client"))
        self.actionEnable_Everything.setText(_translate("DiamondSorter", "Enable \"Everything\""))
        self.actionLaunch_Browser.setText(_translate("DiamondSorter", "Launch Browser"))
        self.actionUndetected_Chrome.setText(_translate("DiamondSorter", "Undetected Chrome"))
        self.actionShow_Widget_Functions.setText(_translate("DiamondSorter", "Show Widget Functions"))
        self.actionInsomnia_HTTP_Client.setText(_translate("DiamondSorter", "Insomnia HTTP Client"))
        self.actionloadDirectory.setText(_translate("DiamondSorter", "loadDirectory"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    DiamondSorter = QtWidgets.QMainWindow()
    ui = Ui_DiamondSorter()
    ui.setupUi(DiamondSorter)
    DiamondSorter.show()
    sys.exit(app.exec_())
